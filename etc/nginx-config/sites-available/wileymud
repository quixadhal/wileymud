##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

# Normally, we want to just get rid of the www. prefix, but for now
# we want to use it for testing...
server {
    listen 80;
    # IPv6
    listen [::]:80;
    listen 443 ssl;
    listen [::]:443 ssl;
    include snippets/snakeoil.conf;

    # Remove www
    server_name www.wileymud.themud.org;
    return 301 $scheme://wileymud.themud.org$request_uri;

#    # Test stuff...
#    root /var/www/html;
#    index index.nginx-debian.php;
#
#    location / {
#        try_files $uri $uri/ =404;
#    }
#    location ~ \.php$ {
#        include snippets/fastcgi-php.conf;
#        fastcgi_pass unix:/run/php/php-fpm.sock;
#    }
#    location ~ /\.ht {
#        deny all;
#        internal;
#    }
#    # End of Test stuff...

}

server {
    listen 80;
    # IPv6
    listen [::]:80;
    listen 443 ssl;
    listen [::]:443 ssl;
    include snippets/snakeoil.conf;

    # phpBB stuff...
    server_name forum.wileymud.themud.org;
    root /home/www/forum;
    index index.php index.html index.htm;
    error_log /var/log/nginx/forum.error.log warn;
    access_log /var/log/nginx/forum.access.log;

    location / {
        try_files $uri $uri/ @rewriteapp;

        # Pass the php scripts to FastCGI server specified in upstream declaration.
        location ~ \.php(/|$) {
            include fastcgi.conf;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            try_files $uri $uri/ /app.php$is_args$args;
            fastcgi_pass unix:/run/php/php-fpm.sock;
        }

        # Deny access to internal phpbb files.
        location ~ /(config\.php|common\.php|cache|files|images/avatars/upload|includes|(?<!ext/)phpbb(?!\w+)|store|vendor) {
            deny all;
            # deny was ignored before 0.8.40 for connections over IPv6.
            # Use internal directive to prohibit access on older versions.
            internal;
        }
    }

    location @rewriteapp {
        rewrite ^(.*)$ /app.php/$1 last;
    }

    # Correctly pass scripts for installer
    location /install/ {
        try_files $uri $uri/ @rewrite_installapp =404;

        # Pass the php scripts to fastcgi server specified in upstream declaration.
        location ~ \.php(/|$) {
            include fastcgi.conf;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            try_files $uri $uri/ /install/app.php$is_args$args =404;
            fastcgi_pass unix:/run/php/php-fpm.sock;
        }
    }

    location @rewrite_installapp {
        rewrite ^(.*)$ /install/app.php/$1 last;
    }

    # Deny access to version control system directories.
    location ~ /\.svn|/\.git {
        deny all;
        internal;
    }

    # End of phpBB stuff...
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # SSL configuration
    #
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    include snippets/snakeoil.conf;

    server_name wileymud.themud.org;
    root /home/www;
    index index.php index.html index.htm;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
        #    return 302 https://github.com/quixadhal/wileymud
        rewrite ^/git(hub)?(.*)$ https://github.com/quixadhal/wileymud$2 last;
    }

    # pass PHP scripts to FastCGI server
    #
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;

        # With php-fpm (or other unix sockets):
        #fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        fastcgi_pass unix:/run/php/php-fpm.sock;
        # With php-cgi (or other tcp sockets):
        #fastcgi_pass 127.0.0.1:9000;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny all;
        internal;
    }

    # Deny access to version control system directories.
    location ~ /\.svn|/\.git {
        deny all;
        internal;
    }

    # One way to do user home directories...

    #location ~ ^/~(.+?)(/.*)?$ {
    #    alias /home/$1/public_html$2;
    #    index index.html index.htm;
    #    autoindex on;
    #}

}

