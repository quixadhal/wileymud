2019-01-07

Installed Debian buster with Gnome desktop
added contrib and non-free to apt sources.list

apt install sudo
apt install dkms build-essential linux-headers-amd64
apt install git git-doc
apt install vim-nox vim-doc

Ugh... stupid nanny state politics...
	To enable root logins from the X11 display manager (gdm)
	edit /etc/gdm3/daemon.conf
	add AllowRoot = true to the [Security] section
	edit /etc/pam.d/gdm-password
	comment out auth required pam_succeed_if.so user != root quiet_success

apt install clang
apt install manpages-posix

Copied .inputrc, .vimrc, .vim/ from my home directory to both wiley and root
Without doing this, cut/paste behavior via Putty was weird.

apt install sqlite3 libsqlite3-dev libdbd-sqlite3-perl sqlite3-doc
apt install libssl-dev libssl-doc
apt install libpcre3-dev libpcre3-dbg sqlite3-pcre

Chagned /etc/ssh/sshd_config to allow logins without an X11 login already established.
    PubkeyAuthentication yes
    PasswordAuthentication yes
    PermitEmptyPasswords yes
    ChallengeResponseAuthentication yes
    UsePAM yes
    AllowTcpForwarding yes
    X11Forwarding yes
    PermitTTY yes
    PrintMotd no
    TCPKeepAlive yes

OK, this is weird... sshd refused connections for FOUR MINUTES after a reboot?  WTF???
Why would it not start immediately, even before X11 was finished setting itself up?

https://daniel-lange.com/archives/152-Openssh-taking-minutes-to-become-available,-booting-takes-half-an-hour-...-because-your-server-waits-for-a-few-bytes-of-randomness.html

That's why.  Hell.

Well, the "fix" for this is to edit /etc/default/grub

    GRUB_CMDLINE_LINUX_DEFAULT="quiet random.trust_cpu=on"
    GRUB_CMDLINE_LINUX="random.trust_cpu=on"

apt install flex bison autoconf automake libtool binutils
apt install gnu-standards autoconf-doc gettext bison-doc flex-doc libtool-doc
apt install m4-doc autoconf-archive doc-base gettext-doc
apt install zlib1g-dev
apt install libwww-shorten-perl
apt install liblog-log4perl-perl
apt install readline-doc libterm-readline-gnu-perl
apt install libjson-perl

More weirdness with sshd...
    Had to disable keepalive, as it prevented more than a single SSH session from working.

apt install php php-pear
apt install php-mbstring
apt install libdate-manip-perl
apt install libnet-telnet-perl
apt install libcgi-pm-perl
cpan
    install HTML::FromANSI
apt install libhtml-tableextract-perl
apt install libgd-perl libgd-dev
apt install libclass-accessor-perl
cpan
    install File::SAUCE

Now that the pre-reqs are done, we can hand-install Image::ANSI, since
the author removed it from CPAN to push his newer version, which simply doesn't
work the same way.

Should we ever lose the tarball of this module, we'll have to rewrite our perl
code, which will be a PITA.

apt install libparallel-forkmanager-perl
apt install subversion cvs

apt install mtr

apt install ipset

iptables-persistent apparently does NOTHING, or at least does it wrong...
apt remove iptables-persistent

    *sigh*
    Fine.  To configure ipset, creat a blacklist table and then add all the entries to it.
        create blacklist hash:ip family inet hashsize 4096 maxelem 65536
        add blacklist 211.159.155.202
        add blacklist 150.109.73.131
        add blacklist 118.25.236.78
        add blacklist 118.89.161.221
        add blacklist 103.60.222.49
        add blacklist 132.232.142.195
        add blacklist 190.85.81.27
    Then, do ipset save blacklist >/etc/iptables/ipset.blacklist

    Once the blacklist exists, do this:

        iptables -I INPUT -m set --match-set blacklist src -j DROP
        iptables -I FORWARD -m set --match-set blacklist src -j DROP

    and then iptables-save > /etc/iptables/rules.v4

    NOW, to restore the rules at boot time (more-or-less), we hack 
        /etc/network/if-up.d/ and make a new script called ipset-restore

        #!/bin/sh

        # This is a kludge to make ipset and iptables restore their rulesets
        # at boot time.

        # We pin this to loopback, as normally that interface should always
        # come up AND isn't likely to go down, thus it should only happen once
        # per boot cycle.

        if [ "$IFACE" == "lo" ]; then
            if [ "$ADDRFAM" == "inet" ]; then
                ipset restore < /etc/iptables/ipset.blacklist
                iptables-restore < /etc/iptables/rules.v4
            fi
        fi

    and hopefully, this gets run after loopback comes up.  It would be ideal to have it
    only run after ALL network interfaces are up, but systemd makes this extremely hard
    to do.

Hippy linux freaks.... a VM has no need to "suspend" or "hibernate"...
    systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target

Restore crontab for mudlist generation:
    0 3,11,19 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &

apt install rsync

Damnit, stop re-enablng ipv6 when it's not going to work anyways...

/etc/sysctl.conf:
    net.ipv6.conf.all.disable_ipv6 = 1
    net.ipv6.conf.default.disable_ipv6 = 1
    net.ipv6.conf.lo.disable_ipv6 = 1

/etc/ssh/sshd_conf:
    AddressFamily inet

/etc/postfix/main.cf:
    inet_interfaces = 127.0.0.1

apt install samba
smbpasswd -a wiley

Made some changes to /etc/samba/smb.conf
    # Samba versions
    # NT1 -- old CIFS version
    # SMB2 -- updated for vista and windows 7
    # SMB3 -- updated for windows 8

    client min protocol = SMB3
    client max protocol = SMB3
    server min protocol = SMB3
    server max protocol = SMB3
    socket options = TCP_NODELAY
    #security = user
    server signing = auto
    client signing = auto
    local master = no
    domain master = no
    preferred master = no
    os level = 10

    [homes]
       comment = Home Directories
       browseable = no
       read only = no
       create mask = 0755
       directory mask = 0755

    [tmp]
        comment = Temporary Stuff
        read only = no
        locking = no
        path = /tmp
        guest ok = yes

And even MORE hippy crap....
    root@wileymud3:/home/wiley# su - Debian-gdm -s /bin/bash
    Debian-gdm@wileymud3:~$ dbus-launch gsettings range org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type
    enum
    'blank'
    'suspend'
    'shutdown'
    'hibernate'
    'interactive'
    'nothing'
    'logout'
    Debian-gdm@wileymud3:~$ dbus-launch gsettings get org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type
    'suspend'
    Debian-gdm@wileymud3:~$ dbus-launch gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing'
    Debian-gdm@wileymud3:~$ logout

No, seriously.. it's a virtual machine.
There will be NO hugging of trees by making it "suspend".

crontab now:
    # m h  dom mon dow   command
    0 3,11,19 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
    25 2 * * * /home/wiley/bin/cleanlogs >/dev/null 2>&1 &
    30 2 * * * /home/wiley/bin/remote-backup >/dev/null 2>&1 &

apt install perl-doc
apt install python3-pip python3-twisted python-attr-doc python-crypto-doc python-openssl-doc
    python-secretstorage-doc python-setuptools-doc python3-examples fonts-roboto
    python-openssl python3-pampy python-cryptography-doc python-enum34-doc

apt install default-jre default-jdk
    ant jython antlr javacc ant-doc libregexp-java liblog4j2-java libjsch-java
    javacc-doc junit-doc jython-doc libpostgresql-jdbc-java libcommons-logging-java-doc
    openjdk-11-source libcompress-lzf-java liblog4j2-java-doc
    libcommons-net-java libcommons-net-java-doc liboro-java

apt install libdata-serializer-perl
apt install libdate-calc-perl

apt install php-sqlite3

updated crontab:
    # m h  dom mon dow   command
    1 3,6,9,12,15,18,21 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
    25 2 * * * /home/wiley/bin/cleanlogs >/dev/null 2>&1 &
    30 2 * * * /home/wiley/bin/remote-backup >/dev/null 2>&1 &
    5 1,7,13,19 * * * /home/wiley/bin/mklogpages.pl --overwrite --debug --start -3 --live --no-pause >/dev/null 2>&1 &

OK, undid all my anti-IPv6 changes (see above), since at Adam's prodding, I got my network
working with IPv6, as my ISP does support it.

For posterity, the main change in the router (beyond re-enabling it) was to tell it to
get an IPv6 address via SLAAC... it defaulted to DHCPv6, which does NOT work.  Once that was
done, I tweaked Windows 10 to "Prefer IPv6 over IPv4", rebooted everything, and it appears
to be functional.

It does seem slightly snappier, although it's hard to say if that's just from the fresh reboot
or because we're no longer using some transparent proxy 6to4 tunnel for everything.  Time
will tell, I guess.

I must say though,  172.92.143.166 is MUCH easier to remember than
2604:4080:1311:b8e1:c5e4:30cb:4f15:fdcc.  Whomever dreamed up that numbering system
needs to be forced to type it as a data entry clerk in hell for all eternity, with
lashings every time they make a typo.

apt install postgresql postgresql-doc libpostgresql-jdbc-java libpostgresql-jdbc-java-doc
    libdbd-pg-perl postgresql-plperl postgresql-plpython3 php-pgsql

apt install apt-file
    apt-file update

apt install whois

Adjusted /etc/postgresql/11/main/pg_hba.conf
    local   all             wiley                                   md5

apt install libpq-dev libpqtypes-dev libpqxx-dev libpq5 libpqxx-doc

updated crontab:
    # m h  dom mon dow   command
    1 0,3,6,9,12,15,18,21 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
    25 2 * * * /home/wiley/bin/cleanlogs >/dev/null 2>&1 &
    30 2 * * * /home/wiley/bin/remote-backup >/dev/null 2>&1 &
    5 1,4,7,10,13,16,19,22 * * * /home/wiley/bin/mklogpages.pl --overwrite --debug --start -3 --live --json --no-pause >/dev/null 2>&1 &
    #0,15,30,45 * * * * /home/wiley/bin/mklogpages.pl --no-pages --no-speakers --no-update --debug --live --no-json --no-pause >/dev/null 2>&1 &
    20 2 * * * (cd /home/wiley/public_html && /usr/bin/tar -cf logdata.tar logdata) >/dev/null 2>&1 &
    10 2 * * * (cd /home/wiley/public_html && PGPASSWORD=tardis69 /usr/bin/pg_dump --clean --if-exists --no-owner i3log | /usr/bin/xz -9ceq -T0 >i3log.sql.xz) >/dev/null 2>&1 &
    5 2 * * * /home/wiley/bin/untiny sql --mark >/dev/null 2>&1 &

apt install ffmpeg

updated crontab:
    # m h  dom mon dow   command
    1 0,3,6,9,12,15,18,21 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
    5 0,1,4,7,10,13,16,19,22 * * * /home/wiley/bin/mklogpages.pl --overwrite --debug --start -3 --live --json --no-pause >/dev/null 2>&1 &
    0,15,30,45 * * * * /home/wiley/bin/mklogpages.pl --no-pages --no-speakers --no-update --debug --live --no-json --no-pause >/dev/null 2>&1 &
    5 2 * * * /home/wiley/bin/untiny sql --mark >/dev/null 2>&1 &
    10 2 * * * (cd /home/wiley/public_html && PGPASSWORD=tardis69 /usr/bin/pg_dump --clean --if-exists --no-owner i3log | /usr/bin/xz -9ceq -T0 >i3log.sql.xz) >/dev/null 2>&1 &
    25 2 * * * (cd /home/wiley/public_html && /usr/bin/tar -Jcf logdata.tar.xz logdata) >/dev/null 2>&1 &
    35 2 * * * /home/wiley/bin/cleanlogs >/dev/null 2>&1 &
    10 3 * * * (cd /home/wiley/public_html && /usr/bin/tar -Jcf logpages.tar.xz logpages) >/dev/null 2>&1 &
    30 3 * * * /home/wiley/bin/remote-backup >/dev/null 2>&1 &

apt install atop nethogs pgtop kerneltop
apt install gdb

apt install figlet php-text-figlet toilet toilet-fonts

apt install build-essential libgtk3-perl libgoocanvas-2.0-dev wmctrl libsox-fmt-all timidity
cpan
    install Archive::Extract File::HomeDir File::ShareDir File::ShareDir::Install
    install GooCanvas2 JSON Net::OpenSSH Path::Tiny Regexp::IPv6 X11::WMCtrl

apt install locate
    . /etc/cron.daily/locate

cpan
    install Bundle::CPAN
    install Time::HiRes
    install Log::Log4perl

apt install libmoose-perl libmoosex-types-perl libmoosex-getopt-perl
    libmoosex-log-log4perl-perl libmoosex-nonmoose-perl libmoosex-singleton-perl
    libmoosex-role-timer-perl libmoosex-storage-perl libmoosex-util-perl
    libmoosex-async-perl libmoosex-undeftolerant-perl libcurses-perl
    libio-pty-perl libsocket-getaddrinfo-perl libsocket6-perl libterm-readkey-perl

apt install libmoosex-strictconstructor-perl libmoosex-params-validate-perl
    libmoosex-types-structured-perl libmoosex-classattribute-perl
    libmoosex-daemonize-perl

apt install libelf-dev

apt install default-libmysqlclient-dev

#   For the old hardware ONLY...
    apt install firmware-misc-nonfree
    apt install r8168-dkms

apt install fping

apt install libboost-dev

cpan
    install Image::Size

apt install libapache2-mod-bw

cpan
    install Image::MetaData::JPEG

---- Only for the VM ----
Upgraded virtualbox to 6.x
Installed guest tools
setup shared folders for the pictures and videos from my desktop
so they can be accessed "directly" without needing to go through samba

usermod -a -G vboxsf wiley

apt install minidlna
edit /etc/minidlna.conf
    media_dir=P,/media/sf_Pictures
    media_dir=V,/media/sf_Videos
    db_dir=/var/cache/minidlna
    log_dir=/var/log
    friendly_name=WileyMUD

usermod -a -G vboxsf minidlna

also, when upgrading kernels, and especially when upgrading versions of
VirtualBox, you must re-install/rebuild the kernel modules for the
extensions to work properly.

apt install build-essential module-assistant
m-a prepare

Click on "install guest additions" from the VM's devices menu
mount /media/cdrom

bash VBoxLinuxAdditions.run

---- Only for the VM ----

apt install cdparanoia flac lame vorbis-tools

--- To upgrade postgresql (forgot to add this earlier)

apt install postgresql-plperl-12
pg_dropcluster --stop 12 main
systemctl daemon-reload
pg_upgradecluster 11 main
systemctl daemon-reload

apt install libimage-exiftool-perl libencode-hanextra-perl
apt install rtorrent

apt install build-essential bison libevent-dev libjemalloc-dev libpcre3-dev
    libpq-dev libsqlite3-dev libssl-dev libz-dev cmake cmake-doc libmariadb-dev

cpan
    install Sort::Naturally::ICU

cpan
    install CPAN::DistnameInfo

apt install libcrypt-ssleay-perl libnet-ssleay-perl libnet-server-perl

apt install libio-aio-perl libio-event-perl

apt install lynx
cpan
    install HTML::FormatText::Lynx HTML::FormatText::Html2text
    o conf lynx /usr/bin/lynx
    o conf commit
    install  POE::Component::Log4perl

apt install mercurial

apt install python3-pep8 python3-flake8 python3-autopep8

cpan
    install Try::Tiny::SmartCatch

  490  apt install kodi-repository-kodi
  493  apt install kodi kodi-addons-dev libkodiplatform-dev

cpan
    install Proc::ProcessTable
    install forks

cpan
    install Config::Tiny

apt install units

cpan
    install Imager::QRCode

apt install curl

A recent update broke python 2 by removing the soft-link to it, so...
    sudo -s
    cd /usr/bin
    ln -s python2 python


--- To upgrade postgresql (forgot to add this earlier)
--- Interestingly, pg_dump sticks to the old version, so you can't
    do a backup of the freshly installed (and empty) cluster before
    nuking it?

    Ahhhh, sneaky.  pg_dump and friends are all actually links to
    a pg_wrapper script which has its own man page, and has an
    option --cluster, which is not documented in the man pages of
    the actual tools.  Nice...

    So anyways, here's the process.

    crontab -e # edit out all the cron entries that update things db related
    systemctl stop apache2
    systemctl stop diskworld
    systemctl stop wileymud

    apt install postgresql-plperl-13

    sudo -s
    su - postgres

    pg_dumpall --cluster 13/main >new_13.sql
    pg_dumpall --cluster 12/main >backup_12.sql

--- Oh yeah, don't forget to apt install postgresql-plperl-13

    pg_dropcluster --stop 13 main
    systemctl daemon-reload
    pg_upgradecluster 12 main
    systemctl daemon-reload

    systemctl start apache2
    systemctl start wileymud
    systemctl start diskworld
    crontab -e # restore the commented out entries

--- Fun huh?  Well, it seems to have worked.

    Probably go bzip2 the backup and keep it around for a bit...

--- New stuff to prep for VM conversion back to this hardware.

    apt install broadcom-sta-dkms
    apt install mutt
    cpan
        install pQuery
        install File::Random
        install Chart::Pie

2020-12-24
---- This is the point where the VM HACKLOG cuts off

    Oh yeah, systemd...
        systemctl enable wileymud (or the path to the unit file)
        systemctl enable wileymud_driver (or the path to the unit file)
        systemctl enable diskworld (or the path to the unit file)
        systemctl enable dw_driver (or the path to the unit file)
        systemctl enable dw_addr (or the path to the unit file)

    And...
        apt install screen
        scp -rp ~wiley/share ~wiley/bin/tf ~wiley/.tf lenin:

        cpan
            re-install all the modules that get messed up...

    apt install smbclient cifs-utils

    Speedtest from the actual speedtest.net people...
        sudo apt-get install gnupg1 apt-transport-https dirmngr
        export INSTALL_KEY=379CE192D401AB61
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $INSTALL_KEY
        echo "deb https://ookla.bintray.com/debian generic main" | sudo tee  /etc/apt/sources.list.d/speedtest.list
        sudo apt-get update
        # Other non-official binaries will conflict with Speedtest CLI
        # Example how to remove using apt-get
        # sudo apt-get remove speedtest-cli
        sudo apt-get install speedtest

To prioritize 5GHz over 2.4GHz...
    sudo nmcli connection modify Dread_5748 connection.autoconnect-priority 10

    This rewrite parts of /etc/NetworkManager/system-connections/...

    root@lenin:/home/wiley# nmcli -f 'NAME,UUID,AUTOCONNECT,AUTOCONNECT-PRIORITY'
    NAME                UUID                                  AUTOCONNECT  PRI
    Dread_5748          5a704699-a2c6-44f7-b768-97feda5e22da  yes          10
    Dread_2748          21b25bc1-97aa-4c39-8d44-f991435d1921  yes          0
    Wired connection 1  6311c04f-8177-4d8f-a0d0-9fe12626df6f  yes          20

Heh, forgot to restore root's crontab entry for the banhammer.
Also, tweaked that stuff to be a bit more reliable.
(It now "forgives" people who got banned if they stop being naughty
long enough to fall off the apache error logs)

Did some more tweaking of the speedtest stuff.

We run speedtest CLI from cron to get the wifi speed, but... we also want
the real network speed (wired).  To do that, we've set up a batch file on
my windows desktop using Task Scheduler and symlinks from the web directory
to our samba-mounted lenin backup directory.

    # m h  dom mon dow   command
    1 0,3,6,9,12,15,18,21 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
    0,15,30,45 * * * * /home/wiley/bin/mklogpages.pl --overwrite --start -3 --json --censor --no-pause >/dev/null 2>&1 &
    1,5,10 0 * * * /home/wiley/bin/mklogpages.pl --no-pages --censor --no-json --no-pause >/dev/null 2>&1 &
    0 2 * * *   /usr/bin/speedtest -s 6199 -uMbps -fjson-pretty >/home/wiley/public_html/speedtest_wifi.json 2>&1 &
    3 1 * * *   /home/wiley/bin/do_backup >/dev/null 2>&1

and the batch file:

    C:\speedtest\speedtest.exe -s 6199 -uMbps -fjson-pretty >E:\Lenin\speedtest.json

Set to run once per day at 2pm via Task Scheduler as a Basic Task, with highest privs,
and run even if no user is logged in (but using my login credentials)
I did set it to NOT run if we don't think we have a network connection...

2021-01-06
    For amusement, changed the main site "page" to redirect to something more fun
    instead of the no-longer-functional alternate site.

        META HTTP-EQUIV="Refresh" Content="0; URL=http://wileymud.themud.org/~wiley/random_video.php"

    ROFLMAO!  So, including this file in my server page causes any HTML that was in it to be included...
    not a huge surprise, and normally not an issue since it's inside pre tags, right?  Well...
    META header stuff still works.

    So the page was randomly redirecting itself to the commented example above.

    Restored my 404 handler, and made it use my random_video script.

        ErrorDocument 404 http://wileymud.themud.org/~wiley/404.html

2021-01-07
    Hmmmm, system update makes systemd more annoying... just in case it screws up
        add systemd.unified_cgroup_hierarchy=false to the kernel command line

2021-01-12
    Adjusted /etc/fstab to add remapping of "naughty" characters for windows shares.

        //192.168.0.10/Videos       /share/videos       cifs    user,uid=1001,gid=100,mapposix,vers=3.0,credentials=/home/wiley/.smbpasswd 0   2
        //192.168.0.10/LeninBackup  /share/leninbackup  cifs    user,uid=1001,gid=100,mapposix,vers=3.0,credentials=/home/wiley/.smbpasswd 0   2

2021-01-13
    pip3 install alpaca-trade-api

2021-01-17
    apt install calibre enscript gnuplot gimp gimp-data-extras
                gnuplot-doc python3-unrardll gimp-help-en imagemagick-doc
                graphviz hp2xx html2ps graphviz-doc python-pyparsing-doc
                xhtml2ps

2021-01-24
    apt install mono-complete
    apt instal npm

2021-02-04
    apt install libgpg-error-dev libgpgme-dev
    pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip3 install -U
    pip3 install -U python-dotenv discord.py

2021-02-06
    apt install git libopus-dev libffi-dev libsodium-dev ffmpeg 
        build-essential libncursesw5-dev libgdbm-dev libc6-dev
        zlib1g-dev libsqlite3-dev tk-dev libssl-dev openssl

2021-02-07
    apt install openjdk-17-jdk openjdk-17-jre openjdk-17-dbg
        openjdk-17-doc openjdk-17-demo openjdk-17-source
        libjs-jquery-ui-docs fonts-ipafont-gothic fonts-ipafont-mincho
        fonts-wqy-microhei fonts-wqy-zenhei fonts-indic
    apt install maven maven-debian-helper

2021-02-23
    apt install dos2unix
    apt install jikespg

2021-03-05
    apt install libcjson

2021-04-05
    dpkg --add-architecture i386
    apt update
    apt install steamcmd -y
    ln -s /usr/games/steamcmd /usr/bin/steamcmd
    steamcmd +force_install_dir /usr/games/valheim +login anonymous +app_update 896660 validate +quit
    apt install htop

2021-04-09
    cpan
        install Config::Tiny
        install Config::Tiny::Ordered

2021-04-16
    cpan
        install CPAN::DistnameInfo
        install Module::Build
        install File::Spec
        install XSLoader
        install YAML
        install Time::HiRes
        install AnyEvent
        install AnyEvent::Gearman::Client
        install Class::XSAccessor
        install Compress::Raw::Zlib
        install Digest::MD5
        install Cache::Memcached::Fast
        install Log::Log4perl
        install Devel::Size
        install utf8::all
        install Test::Differences
        install Devel::NYTProf
        install Text::CSV_XS

    apt install libchart-clicker-perl

2021-04-19
    cpan
        install Time::Out

2021-04-26
    chgrp www-data <google api key file>
    chmod 640 <google api key file>
    chgrp www-data <web-dir>/autoplaylist*
    chmod 664 <web-dir>/autoplaylist*

2021-08-05
    apt install clang-format

2021-08-09
    cpan
        install Log::Dispatch::FileRotate

2021-08-11
    Since ookla destroyed their apt repository, the raw download
    url looks like this.
        https://install.speedtest.net/app/cli/ookla-speedtest-1.0.0-x86_64-linux.tgz

    From the page https://www.speedtest.net/apps/cli

2021-08-21
    sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
    apt install code

2021-09-10
    Forgot to mention this... Debian Bullseye got promoted to Debain Bookworm a few
    weeks ago, so I moved us back to "testing" to continue evolving.  Nothing broke,
    so I had nothing specific to report.  The usual update everything, edit
    /etc/apt/sources.list, update everything again, worked fine.

    ALSO:

        wiley@lenin:~$ cat /etc/apt/sources.list.d/ookla_speedtest-cli.list
        # this file was generated by packagecloud.io for
        # the repository at https://packagecloud.io/ookla/speedtest-cli

        #deb https://packagecloud.io/ookla/speedtest-cli/debian/ bullseye main
        #deb-src https://packagecloud.io/ookla/speedtest-cli/debian/ bullseye main

        deb https://packagecloud.io/ookla/speedtest-cli/debian/ bullseye main
        deb-src https://packagecloud.io/ookla/speedtest-cli/debian/ bullseye main

    After screwing around with the god-awful shell script they now try to make you run
    as root, THAT is the resulting apt sources file it will generate for me, which
    works fine.

    Also, while I'm at it...

        wiley@lenin:~$ cat /etc/apt/sources.list.d/vscode.list
        deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main

    Obvious from the above entry, but there it is in one spot...

    I moved my router from its position bolted under my desk, to a place
    atop a bookshelf near the wall socket for the internet feed.  Shouldn't be
    any noticeable change in performance, but it's easier to get to and may
    run a little cooler... and no worries about spilling coffee into it now.

2021-09-10
----    Booting the VM up to update it to to roughy match our
        live machine, and thus be a semi-portable backup.

    First step, apt update and apt dist-upgrade, then convert to newer debian version
    like we did for the live version a few weeks ago.

    So, after the initial dist-upgrade, rebooting causes a memory fault in
    virtualbox, so perhaps I'll update that before I continue... :)

    Old version 6.1.14r1
    New version 6.1.26

    Remove/unmount old extension image.
    Click install guest addons to mount the newer version
    apt install build-essential module-assistant
    m-a prepare
    mount /media/cdrom
    cd /media/cdrom
    bash VBoxLinuxAdditions.run
    reboot

    apt install smbclient cifs-utils
    apt install gnupg1 apt-transport-https dirmngr
    apt install calibre enscript gnuplot gimp gimp-data-extras
                gnuplot-doc python3-unrardll gimp-help-en imagemagick-doc
                graphviz hp2xx html2ps graphviz-doc python-pyparsing-doc
                xhtml2ps mono-complete npm libgpg-error-dev libgpgme-dev
                git libopus-dev libffi-dev libsodium-dev ffmpeg 
                build-essential libncursesw5-dev libgdbm-dev libc6-dev
                zlib1g-dev libsqlite3-dev tk-dev libssl-dev openssl
                openjdk-17-jdk openjdk-17-jre openjdk-17-dbg
                openjdk-17-doc openjdk-17-demo openjdk-17-source
                libjs-jquery-ui-docs fonts-ipafont-gothic fonts-ipafont-mincho
                fonts-wqy-microhei fonts-wqy-zenhei fonts-indic
                maven maven-debian-helper dos2unix jikespg

    apt install libcjson # not found???
    apt install libcjson-dev libcjson1

    dpkg --add-architecture i386
    apt update
    apt install steamcmd -y
    ln -s /usr/games/steamcmd /usr/bin/steamcmd
    steamcmd +force_install_dir /usr/games/valheim +login anonymous +app_update 896660 validate +quit

    apt install htop libchart-clicker-perl clang-format

    sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
    apt install code

        wiley@lenin:~$ cat /etc/apt/sources.list.d/ookla_speedtest-cli.list
        # this file was generated by packagecloud.io for
        # the repository at https://packagecloud.io/ookla/speedtest-cli

        #deb https://packagecloud.io/ookla/speedtest-cli/debian/ bullseye main
        #deb-src https://packagecloud.io/ookla/speedtest-cli/debian/ bullseye main

        deb https://packagecloud.io/ookla/speedtest-cli/debian/ bullseye main
        deb-src https://packagecloud.io/ookla/speedtest-cli/debian/ bullseye main

    To use the cloudfront repository....

        apt-key add <wtf.gpgkey

        -----BEGIN PGP PUBLIC KEY BLOCK-----

        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
        +Nl+5MEQNMi7SC43gy5kBMcq
        =5vcv
        -----END PGP PUBLIC KEY BLOCK-----


    pip3 install alpaca-trade-api
    pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip3 install -U
    pip3 install -U python-dotenv discord.py

    A shit-ton of python 3 errors and warnings... oh well... might have to fix stuff
    later...

    cpan
        install Bundle::CPAN

    cpan
        install Config::Tiny
        install Config::Tiny::Ordered
        install CPAN::DistnameInfo
        install Module::Build
        install File::Spec
        install XSLoader
        install YAML
        install Time::HiRes
        install AnyEvent
        install AnyEvent::Gearman::Client
        install Class::XSAccessor
        install Compress::Raw::Zlib
        install Digest::MD5
        install Cache::Memcached::Fast
        install Log::Log4perl
        install Devel::Size
        install utf8::all
        install Test::Differences
        install Devel::NYTProf
        install Text::CSV_XS
        install Time::Out
        install Log::Dispatch::FileRotate

    OK, now switched apt sources.list to testing and did the update/dist-upgrade

    At this point, I'll reboot and then have git pull down the changes to
    wileymud's home directory, and see if I can get the webserver set up to
    match the live machine.... then we'll be back in mostly-sync and I can
    make a 200G backup of the VM image.

    TODO:

    chgrp www-data <google api key file>
    chmod 640 <google api key file>
    chgrp www-data <web-dir>/autoplaylist*
    chmod 664 <web-dir>/autoplaylist*

2021-11-04
    Nothing to report, but https://bit.ly/2ZMshTj is the document for
    adjusting the windows group policy entries for automatic reboots, which
    I figured I'd stash for the future.

2021-11-10
    did the pg_upgradecluster dance to move from postgresql 13 to 14.

2021-11-27
    apt install aria2

    youtube-dl --external-downloader aria2c
        --external-downloader-args '-c -j 3 -x 3 -s 3 -k 1M' URL

2021-12-03
    apt install pandoc

2022-01-07
    Added "password-flags=0" to
        /etc/NetworkManager/system-connections/Dread_5748.nmconnection
        in an attempt to solve the recent change that now causes wifi
        to request a password from the user, even when no users is logged
        in, which means having to walk to the console and type in an
        account password.  This is NOT the wifi password (which is remembered)
        This is debian deciding it needs user authentication despite the
        connection being set to system level and NOT associated with any
        user.

2022-01-10
    Idiots... no idea if this will actually work, but...

    https://code.luasoftware.com/tutorials/linux/ubuntu-prompt-system-policy-prevents-modification-of-network-settings-for-all-users/
    https://www.freedesktop.org/software/polkit/docs/0.105/pklocalauthority.8.html

    /etc/polkit-1/localauthority/50-local.d/10-network-manager.pkla
        [Let all users modify system settings for network]
        Identity=unix-user:*
        Action=org.freedesktop.NetworkManager.settings.modify.system;
            org.freedesktop.NetworkManager.settings.enable-disable-network;
            org.freedesktop.NetworkManager.sleep-wake;
            org.freedesktop.NetworkManager.wifi.scan
        ResultAny=yes
        ResultInactive=yes
        ResultActive=yes

2022-01-25
    PHP upgraded to 8.1, which means you have to re-re-re-edit the config file
    /etc/apache2/mods-enabled/php8.1.conf
        # To re-enable PHP in user directories comment the following lines
        # (from <IfModule ...> to </IfModule>.) Do NOT set it to On as it
        # prevents .htaccess files from disabling it.
        #<IfModule mod_userdir.c>
        #    <Directory /home/*/public_html>
        #        php_admin_flag engine Off
        #    </Directory>
        #</IfModule>

2022-02-11
    # For the current fluffos/lima build
    apt install cmake libevent-dev libjemalloc-dev libpcre3-dev

2022-02-23
    cpan
        install WWW::Shorten::Bitly
        install File::SAUCE
        unpack and build Image-ANSI-0.10.tar.gz
        install HTML::FromANSI
        install Image::MetaData::JPEG
        install File::Random
        install Image::Size

2022-02-26
    apt install php-gd

2022-02-28
    Added new crontab entry to do a mtr traceroute to *Kelly
        7 */2 * * *     /usr/bin/mtr -c 10 -r -w kelly
                        >/home/wiley/public_html/log/kelly.ascii 2>/dev/null &

    and an entry in /etc/hosts
        45.64.56.66     kelly.themud.org    kelly

    Full crontab, in case I forgot to update this at some point...

        # m h  dom mon dow   command
        1 0,3,6,9,12,15,18,21 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
        0,15,30,45 * * * *          /home/wiley/bin/mklogpages.pl --overwrite --start -3 --json --censor --no-pause >/dev/null 2>&1 &
        4,19,34,49 * * * *          /home/wiley/bin/untiny sql --mark >/dev/null 2>&1 &
        1,5,10 0 * * *              /home/wiley/bin/mklogpages.pl --no-pages --censor --no-json --no-pause >/dev/null 2>&1 &
        #25 4 * * *                  /usr/bin/speedtest -s 6199 -uMbps -fjson-pretty >/home/wiley/public_html/speedtest_wifi.json 2>&1 &
        #33 3 * * *                  /usr/bin/speedtest -s 35180 -uMbps -fjson-pretty >/home/wiley/public_html/speedtest_wifi.json 2>&1 &
        33 3 * * *                  /usr/bin/speedtest -uMbps -fjson-pretty >/home/wiley/public_html/speedtest_wifi.json 2>&1 &
        45 3,5 * * *                /home/wiley/bin/upload_speedtest.pl >/dev/null 2>&1 &
        #3 1 * * *                   /home/wiley/bin/do_backup >/dev/null 2>&1
        3 1 * * *                   /home/wiley/bin/do_backup >/home/wiley/backup.log 2>&1
        7 */2 * * *                 /usr/bin/mtr -c 10 -r -w kelly >/home/wiley/public_html/log/kelly.ascii 2>/dev/null &

2022-03-03
    I forgot, I also had to fiddle with apt, because it now wants third party
    gpg keys to be in /etc/apt/trusted.gpg.d/

    So, munge stuff to make /etc/apt/trusted.gpg.d/packagecloud.io.asc

2022-03-08
    apt install nethack-console

2022-03-17
    Messing around with phpBB.
        adduser wiley www-data

        Download and unpack phpBB-3.3.7.tar.bz2
        Download and merge in style Carbon.zip
        Download and merge in language japanese_1_3_4.zip
            Remember to copy the ja files from prosilfer to Carbon too
        Tweak .htaccess to comment out the -Multiviews option, as
            apache throws a fit unless we do it at the server level

        Move those into place in public_html
        createdb phpbb3

        chown -R wiley.www-data phpBB3
        find phpBB3 -type d | xargs chmod 6775
        find phpBB3 -type f | xargs chmod 664

        Do the web install thingy at http://wileymud.themud.org/~wiley/phpBB3

        Disable the vigilink crap
        Install Carbon as a selectable theme
        Install Japanese as a selectable language
        Set Carbon as the default theme
            Tweak the header for Carbon to use our own graphics later
        Allow users to disable silly naughty word filter
        Set default date format to be "Y-m-d H:i:s T"
            which should look like "2022-03-17 14:52:00 PDT"
        Change user registration to requires admin approval.
            Look into the idea of letting the board do email based
            registration, if we can find a way to get the board to do it.

    Hmmmm, control panel worked and seems ok, but then it won't let you log
    in, nor send an "i forgot my email" message, so something is stil unhappy.

2022-03-19
    I'm officially done with apache.

    apt purge apache2
    apt install php-fpm
    apt install geoip-bin
    apt install nginx-full nginx-doc

    We'll have a day or two of downtime while I adapt all my stuff to
    the new web server AND also move it out of wiley's home directory.

2022-03-27
    apt install libavif-bin libavif-dev

2022-04-16
    Yay, open source breaking my stuff again for no real reason....

openssh (1:9.0p1-1) unstable; urgency=medium

  OpenSSH 9.0 includes a number of changes that may affect existing
  configurations:

   * This release switches scp(1) from using the legacy scp/rcp protocol to
     using the SFTP protocol by default.

     Legacy scp/rcp performs wildcard expansion of remote filenames (e.g.
     "scp host:* .") through the remote shell. This has the side effect of
     requiring double quoting of shell meta-characters in file names
     included on scp(1) command-lines, otherwise they could be interpreted
     as shell commands on the remote side.

     This creates one area of potential incompatibility: scp(1) when using
     the SFTP protocol no longer requires this finicky and brittle quoting,
     and attempts to use it may cause transfers to fail. We consider the
     removal of the need for double-quoting shell characters in file names
     to be a benefit and do not intend to introduce bug-compatibility for
     legacy scp/rcp in scp(1) when using the SFTP protocol.

     Another area of potential incompatibility relates to the use of remote
     paths relative to other user's home directories, for example - "scp
     host:~user/file /tmp". The SFTP protocol has no native way to expand a
     ~user path. However, sftp-server(8) in OpenSSH 8.7 and later support a
     protocol extension "expand-path@openssh.com" to support this.

     In case of incompatibility, the scp(1) client may be instructed to use
     the legacy scp/rcp using the -O flag.

 -- Colin Watson <cjwatson@debian.org>  Sat, 09 Apr 2022 14:14:10 +0100

2022-05-06
    Yet more annoyances with modern Linux...

    Apparently the wifi module either failed to build, wasn't auto-built,
    or maybe wasn't even included in the latest 5.17.0-1 version of the
    Debian kernel.  This, of course, means the wifi card was not recognized,
    and since that is the only network connection available, no networking.

    Trudge into closet, work on console, take ibuprofen for back pain...

    No easy fix for this yet, but as a workaround to buy more time....

    Edit /etc/default/grub:

        #GRUB_DEFAULT=0

        # This tells grub to use the last selected entry instead of the top one
        GRUB_SAVEDEFAULT=true
        GRUB_DEFAULT=saved

    Commenting out the normal default of the first entry and adding those
    lines allows you to pick one from the menu (in advanced options) and
    it will become "sticky", and be used for subsequent unattended boots.

    It probably saves the NUMBER somewhere, so if a new kernel is installed
    or built, it will likely screw this up.

    But it gives me (or Debian) time to figure out what went wrong.

    Of course, you have to run update-grub after this, and then also reboot
    once and pick the one you want.  So, two reboots later, it seems to be
    working.

    ALSO, might as well do this to try and keep apt from breaking things...

        apt-mark manual linux-image-5.16.0-6-amd64 linux-headers-5.16.0-6-amd64
            linux-headers-5.16.0-6-common linux-kbuild-5.16 r8168-dkms

    ----

    Just as an exercise that we hopefully won't NEED to do...

    To build a kernel from scratch, since Debian no longer keeps older
    source packages around...

    apt install bzip2 xz build-essential kernel-package libncurses5-dev
    
    Download the kernel source from kernel.org:

        https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.16.20.tar.xz

    Unpack it somewhere and go into it.

        make-kpkg --rootcmd fakeroot --config menuconfig --initrd --us --uc kernel_image

        --us do not sign source
        --uc do not sign changelog
        --initrd perform any actions necessary for a kernel loaded using initrd
        -- rootcmd fakeroot command that provides a means of gaining super user access
        --config menuconfig will use menuconfig as a configuration tool where default is oldconfig

    I copied /boot/config-5.16.0-6-amd64 into the kernel tree as .config and
        can then in theory do:

        make-kpkg --rootcmd fakeroot  --initrd --us --uc kernel_image

    This is also helpful if you get a version mismatch....

        cp include/generated/utsrelease.h include/linux/

    In theory, that should spit out a .deb package you can install...

    ---
    Of course those directions are out of date...

    apt install libncurses5 libncurses5-dev
    apt install fakeroot build-essential devscripts
    #apt install build-dep linux

    ---
    also out of date, since build-dep doesn't exist.

2022-05-09
    apt-mark hold linux-image-5.16.0-6-amd64 linux-headers-5.16.0-6-amd64
        linux-headers-5.16.0-6-common linux-kbuild-5.16

    sudo cp -rp /boot/grub /root/boot-grub-backup

    This should keep debian from nuking the kernel that we know works,
    and probably prevent kernel updates.... making a copy of the raw
    grub config files just in case it does install a new kernel and
    messed up the grub bootloader

    Actually might as well just...

    sudo cp -rp /boot /root/boot
    sudo cp -rp /etc/default/grub* /root/etc-default-grub/

    Then if shit hits the fan, in theory you can copy it back into place
    from the console and re-run grub again

2022-05-18
    Well, it looks like someone updated the wifi driver package, as it now
    builds correctly for 5.17.0.  In theory, we could now unhold the 5.16
    stuff, but I'm inclined to leave it as is.

    If it works as I suspect, a new kernel being installed may result in 3
    choices in grub, since 5.16 won't be removed, even if we get more newer
    versions.  We might want to reset grub to always pick the new one, but
    I'm kinda curious to see what happens when a newer kernel shows up.

2022-05-30
    Forgot to include this in the HACKLOG.... this should be added to
        /etc/ssh/sshd_config

        # Date: Mon, 21 Feb 2022 07:12:36 -0800
        #
        # openssh (1:8.8p1-1) unstable; urgency=medium
        #
        #   OpenSSH 8.8 includes a number of changes that may affect existing
        #   configurations:
        #
        #    * This release disables RSA signatures using the SHA-1 hash algorithm by
        #      default. This change has been made as the SHA-1 hash algorithm is
        #      cryptographically broken, and it is possible to create chosen-prefix
        #      hash collisions for <USD$50K.
        #
        #      For most users, this change should be invisible and there is no need to
        #      replace ssh-rsa keys. OpenSSH has supported RFC8332 RSA/SHA-256/512
        #      signatures since release 7.2 and existing ssh-rsa keys will
        #      automatically use the stronger algorithm where possible.
        #
        #      Incompatibility is more likely when connecting to older SSH
        #      implementations that have not been upgraded or have not closely tracked
        #      improvements in the SSH protocol. For these cases, it may be necessary
        #      to selectively re-enable RSA/SHA1 to allow connection and/or user
        #      authentication via the HostkeyAlgorithms and PubkeyAcceptedAlgorithms
        #      options. For example, the following stanza in ~/.ssh/config will enable
        #      RSA/SHA1 for host and user authentication for a single destination
        #      host:
        #
        #          Host old-host
        #              HostkeyAlgorithms +ssh-rsa
        #              PubkeyAcceptedAlgorithms +ssh-rsa
        #
        #      We recommend enabling RSA/SHA1 only as a stopgap measure until legacy
        #      implementations can be upgraded or reconfigured with another key type
        #      (such as ECDSA or Ed25519).
        #
        #  -- Colin Watson <cjwatson@debian.org>  Tue, 15 Feb 2022 19:20:21 +0000
        
        HostkeyAlgorithms +ssh-rsa
        PubkeyAcceptedAlgorithms +ssh-rsa

    Of course, in an ideal world, we'd not want to do this, but Putty doesn't support
    the newer RSA checks, and I don't port forward SSH anyways.

2022-06-05
    Open source annoyances for the future....
        apt-listchanges: News
        ---------------------

        isc-dhcp-client (4.4.3-1) unstable; urgency=medium

          ISC has decided to stop maintaining the client and relay parts of isc-dhcp,
          and they will be removed after the 4.4.3 release, keeping only the server
          component. Please, consider using an alternative for isc-dhcp-client
          (dhclient).

          More information can be found in the ISC official announcement:
          https://www.isc.org/blogs/dhcp-client-relay-eom/

         -- Santiago Ruano Rincón <santiago@debian.org>  Thu, 17 Mar 2022 16:43:03 +0100

    apt install libxml-xpath-perl
    cpan
        install Sort::Key::Natural


2022-06-14
    Yay, open source!

    So, from now on, the dkms module my system depends on for networking will always
    be broken when a new kernel releases, and may (or may not) be fixed days or weeks
    later.

    This means we now have to always mark working kernels as "manual" via
    apt-mark, so they can't be uninstalled automatically.  AND, we need to also
    ensure grub stays in "use the last selected" mode, rather than "use the newest"
    one.  Of course, that means to actually switch to the newer one when it DOES
    become working, we have to walk to the machine, like in dinosaur times.

    apt-mark manual
        linux-headers-5.17.0-1-amd64
        linux-headers-5.17.0-1-common
        linux-image-5.17.0-1-amd64

        broadcom-sta-dkms
        dkms
        r8168-dkms

2022-06-16
    grub2 (2.06-1) unstable; urgency=medium

      * Boot menu entries for other operating systems are no longer generated by
        default.  To re-enable this, set GRUB_DISABLE_OS_PROBER=false in
        /etc/default/grub.

     -- Colin Watson <cjwatson@debian.org>  Sun, 28 Nov 2021 13:30:32 +0000

    *sigh*

2022-06-21

    wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb 
    dpkg -i packages-microsoft-prod.deb
    apt install dotnet-sdk-6.0 dotnet-sdk-5.0 dotnet-sdk-3.1
    #apt install dotnet-runtime-6.0 dotnet-runtime-5.0 dotnet-runtime-3.1

    THEN I can help the Distant Worlds 2 devs out by submitting my CPU data
    via their little .net application.

    git clone git@github.com:Tyler-IN/CpuCheck.git cpucheck_dw2
    cd cpucheck_dw2/CpuCheck/
    dotnet build -c Release
    cd bin/Release/net6.0/
    ./CpuCheck

        wiley@lenin:~/cpucheck_dw2/CpuCheck/bin/Release/net6.0$ ./CpuCheck
        .NET 6.0.6
        RuntimeIdentifier = debian-x64
        OSDescription = Linux 5.17.0-1-amd64 #1 SMP PREEMPT Debian 5.17.3-1 (2022-04-18)
        ProcessorCount = 2
        PhysicalCoreCount = 2
        PhysicalCoreThreadProcessorAffinityMask = 0x3
        Vendor(s) = GenuineIntel
        CPU(s) = Intel(R) Pentium(R) CPU G630 @ 2.70GHz
        === BEGIN CPUID SNAPSHOT BR ===
        C1oCoJ4FdjtyUAppMdOCN+mt+CIegnv37v4apWNiYlngieffLMHiRCMIAlrXnBND23jifxSaO9HcA5rw/xJ2fV+HByAjSywMKKIQTzxKpng84PGgBwthbieQ2Mg4mlaFtAEw4X54/kDx9UdNJIBXnWjXvH+a/3vLgHjwXoAvBaAl4NJh3+Ij4UAFuMG1oMDZRQ14QqIDNMBqweig0QOKNjOov1djAAQCAhgQKJGIBAxIACRgQAGAAjCgBEAJGPUhC2hZAECMDe3ak7GAc8TkIok3V7CAq5geDvLyemTxRW+6UteFUaPMRFsUSTMbjf9UUAAAauwFuK0JaCwJ4mGNS4YkkkgiOZVkAA==
        === END CPUID SNAPSHOT BR ===

        Press any key to exit.


2022-07-05
    apt install smartmontools

2022-07-10
    cpan install Devel::Modlist
        This can be used like perl -d:Modlist script1 script2...
        In theory, it will spit out all the modules required.

    cpan install Module::ExtractUse
        This is another one that does static analysis, rather than
        catching it on load.

2022-08-26
    Installed new /etc/adduser.conf file with update and tweaked it to be

        # The USERGROUPS variable can be either "yes" or "no".  If "yes" each
        # created user will be given their own group to use as a default.  If
        # "no", each created user get the primary group defined below as
        # USERS_GROUP or USERS_GID.
        # Default: USERGROUPS=yes
        #USERGROUPS=yes
        USERGROUPS=no

        # Newly created users get this group as primary group if USERGROUPS
        # "no", and as a supplemental group if USERGROUPS is "yes".
        # Set one of the variables to reference the group. Don't set both.
        # Default: USERS_GID=undefined, USERS_GROUP=undefined
        USERS_GID=100
        USERS_GROUP=users

2022-10-22
        policykit-1 (121+compat0.1-2) experimental; urgency=medium

          This version of polkit changes the syntax used for local policy rules:
          it is now the same JavaScript-based format used by the upstream polkit
          project and by other Linux distributions.

          System administrators can override the default security policy by
          installing local policy overrides into /etc/polkit-1/rules.d/*.rules,
          which can either make the policy more restrictive or more
          permissive. Some sample policy rules can be found in the
          /usr/share/doc/polkitd/examples directory. Please see polkit(8) for
          more details.

          Some Debian packages include security policy overrides, typically to
          allow members of the sudo group to carry out limited administrative
          actions without re-authenticating. These packages should install their
          rules as /usr/share/polkit-1/rules.d/*.rules. Typical examples can be
          found in packages like flatpak, network-manager and systemd.

          Older Debian releases used the "local authority" rules format from
          upstream version 0.105 (.pkla files with an .desktop-like syntax,
          installed into subdirectories of /etc/polkit-1/localauthority
          or /var/lib/polkit-1/localauthority). The polkitd-pkla package
          provides compatibility with these files: if it is installed, they
          will be processed at a higher priority than most .rules files. If the
          polkitd-pkla package is removed, .pkla files will no longer be used.

         -- Simon McVittie <smcv@debian.org>  Wed, 14 Sep 2022 21:33:22 +0100

        I see a new version of postgresql too, so the upgradecluster dance
        will have to be invoked again...

        I also see apache2 noted, but I thought I removed all of that.. must
        have missed one bit.

    ----
    apt install postgresql-plperl-15

    systemctl stop wileymud

    pg_dumpall --cluster 15/main >new_15.sql
    pg_dumpall --cluster 14/main >backup_14.sql

    pg_dropcluster --stop 15 main
    systemctl daemon-reload
    pg_upgradecluster 14 main
    systemctl daemon-reload

    systemctl start wileymud
    xz -9v backup_14.sql
    ----

    OK, reboot for all the other changes now...

2022-11-01
    fortune is no longer installed by default, so sad...

    apt install fortune-mod fortunes fortunes-off
        fortunes-bofh-excuses
        libfortune-perl cookietool

2022-11-04
    apt install python3-jsonrpclib-pelix

2022-11-18
    A quick fix to the new warnings about postgres version mismatches...

        for i in ack forum i3log logfile pi3 ping py3 rule speedtest
            test wileymud; do
            echo alter database $i refresh collation version | psql $i; done

    Also do this for postgres and template1 as the postgres user.

2022-12-09
    apt install rust-all cargo-doc rust-doc rust-src libstd-rust-dev-wasm32
        libstd-rust-dev-windows gdb-doc lld-14 gcc-10-locales
        fonts-mathjax-extras fonts-stix libjs-mathjax-doc

2022-12-29
    apt install build-essential llvm clang libclang-dev cmake
        libssl-dev pkg-config python3

2023-01-16
    anacron (2.3-36) unstable; urgency=medium

          If you run Debian testing/unstable and ever installed anacron 2.3-33 on
          a systemd based system, then anacron will no longer be enabled and the
          daily/weekly/monthly cron jobs will not be run until it is.

          Since not all cron jobs have migrated to systemd timers, Debian
          testing/unstable systems with systemd and anacron may be missing
          some essential cron jobs, such as making backups of aptitude state.

          To see if a system is affected you can use these commands:

            zgrep -i anacron.*2.3-33 /var/log/apt/history.log*
            systemctl status anacron.service anacron.timer

          To re-enable anacron you can use these commands:

            sudo systemctl enable anacron.service anacron.timer
            sudo systemctl start anacron.service anacron.timer

    *sigh*

2023-01-17
    In my ongoing effort to learn stuff and try to do things "the right way"
    instead of the simple and easy way that takes 10 seconds and has worked
    fine for the last 30 years... I delved into the Debian "alternatives" system.

    My goal, make python3 an alternative-aware thing so I can swtich the symlinks
    that the OS has in /usr/bin back and forth between 3.10 and 3.11 at will.

    After an hour of poking at the internet and finding lots of semi-helpful
    examples, I finally came up with this:

        #!/bin/bash

        if [ $UID -ne 0 ]; then
            echo "You must be ROOT to do this!"
            exit 1
        fi

        function doit() {
            cd /usr/bin
            for file in /usr/bin/python3.*; do
                if [ -f $file ]; then
                    if [ ! -L $file ]; then
                        c_file="$file-config"

                        filename="python3"
                        c_filename="python3-config"
                        #filename=`basename $file`
                        #c_filename="$filename-config"
                        update-alternatives \
                            --install /usr/bin/python3 $filename $file 9001 \
                            --slave /usr/bin/python3-config $c_filename $c_file
                        update-alternatives --set $filename $file
                        echo "$filename set to $file"
                    fi
                fi
            done
        }

        function undo() {
            cd /usr/bin
            update-alternatives --remove-all python3
            update-alternatives --remove-all python3.10
            ln -sf python3.10 python3
            ln -sf python3.10-config python3-config
        }

        if [ -n "$1" -a "$1" == "doit" ]; then
            doit
        elif [ -n "$1" -a "$1" == "undo" ]; then 
            undo
        else
            echo "doit or undoit"
        fi

    Not sure why people can't write clear and simple man pages anymore.  The usage
    is simple once you understand it...

        update-alternatives --install <link> <name> <path> <priority>
                            --slave <link> <name> <path>

            <link>      The thing you are going to use as the symlink
            <name>      The name of the <link>, NOT of the specific option
            <path>      The TARGET file for that specific option
            <priority>  Arbitary number used for auto mode

        --slave simply allows you to have multiple symlinks manipulated at once.

    This was confusing because the man pages and half the examples made it seem
    like <name> was supposed to be the the precise version.  In this case, my
    system has python 3.10 and 3.11 installed, but if you follow most of the
    examples, you end up trying to call both of them 3.10 which fails miserably.

    When finally done right, --config python3 results in:

        root@lenin:/home/wiley# update-alternatives --config python3
        There are 2 choices for the alternative python3 (providing /usr/bin/python3).

          Selection    Path                 Priority   Status
        ------------------------------------------------------------
          0            /usr/bin/python3.11   9001      auto mode
          1            /usr/bin/python3.10   9001      manual mode
        * 2            /usr/bin/python3.11   9001      manual mode

        Press <enter> to keep the current choice[*], or type selection number:

    and the corresponding symlinks:

        root@lenin:/home/wiley# ls -al /usr/bin/python3*
              25 Jan 17 02:23 /usr/bin/python3 -> /etc/alternatives/python3
         5859432 Dec  7 05:47 /usr/bin/python3.10
              34 Dec  7 05:47 /usr/bin/python3.10-config -> x86_64-linux-gnu-python3.10-config
         6836184 Dec 31 02:23 /usr/bin/python3.11
              34 Dec 31 02:23 /usr/bin/python3.11-config -> x86_64-linux-gnu-python3.11-config
              32 Jan 17 02:23 /usr/bin/python3-config -> /etc/alternatives/python3-config
    and

        root@lenin:/home/wiley# ls -al /etc/alternatives/python3*
         19 Jan 17 02:26 /etc/alternatives/python3 -> /usr/bin/python3.11
         26 Jan 17 02:26 /etc/alternatives/python3-config -> /usr/bin/python3.11-config

    I also discovered that my little toy project, which uses JSON serialization
    and some black magic to store/retrieve class info... will break when switching
    from 3.10 to 3.11... the code works fine, but the JSON serialization depends on
    magic stuff that apparently has changed in 3.11, so you can't use an old JSON save
    file once you've updated version.

2023-01-24
    NOTICE: Not enabling PHP 8.2 FPM by default.
    NOTICE: To enable PHP 8.2 FPM in Apache2 do:
    NOTICE: a2enmod proxy_fcgi setenvif
    NOTICE: a2enconf php8.2-fpm
    NOTICE: You are seeing this message because you have apache2 package installed.
    Processing triggers for libapache2-mod-php8.2 (8.2.1-1) ...

    apt purge apache2* libapache2*

        dpkg: warning: while removing apache2-bin, directory '/var/lib/apache2' not empty so not removed
        dpkg: warning: while removing apache2, directory '/var/www/html' not empty so not removed
        dpkg: warning: while removing libapache2-mod-php8.1, directory '/etc/apache2/mods-available' not empty so not removed

    Hopefully that gets rid of the last of the apache cruft.

2023-01-26
    PHP 8.2 appears to have changed DateTime objects so they default to UTC instead
    of the system's local timezone... set_default_timezone() used to force it for
    the log pages, see site_gloal.php.

2023-02-07
    *sigh*  Yet more nanny state BS to make life more difficult for people
    who properly manage their systems.  It's also worth noting that the text
    shown does NOT tell you about the workaround, which is listed in github.

    https://salsa.debian.org/cpython-team/python3/-/blob/master/debian/README.venv

        This can be overriden by passing the --break-system-packages option to pip.
        You do this at your own risk: pip may break Python modules that part of
        your Debian system depends on.

    python-pip (23.0+dfsg-1) unstable; urgency=medium

      This version of pip introduces PEP 668 support. Debian's python3.11
      interpreter will soon (>= 3.11.1-3) declare the installation to be
      EXTERNALLY-MANAGED, instructing pip to disallow package installation outside
      virtualenvs.

      See: https://peps.python.org/pep-0668/

      Practically, this means that you can't use pip to install packages outside a
      virtualenv, on a Debian system, any more.

      See /usr/share/doc/python3.11/README.venv for more details.
      If that isn't available yet, check:
      https://salsa.debian.org/cpython-team/python3/-/blob/master/debian/README.venv

     -- Stefano Rivera <stefanor@debian.org>  Wed, 01 Feb 2023 19:14:08 -0400

2023-02-15
    nginx-full (1.22.1-6) unstable; urgency=medium

      The packages nginx-core, nginx-full, nginx-light, nginx-extras are deprecated.
      Packages no longer distribute the nginx binary and are replaced
      by a metapackage to keep upgrades smooth.
      Please simply install 'nginx' and 'libnginx-mod-...' modules You need
      instead of these packages.

     -- Jan Mojžíš <jan.mojzis@gmail.com>  Wed, 11 Jan 2023 20:23:22 +0100

    openssh (1:9.2p1-1) unstable; urgency=medium

      OpenSSH 9.2 includes a number of changes that may affect existing
      configurations:

       * ssh(1): add a new EnableEscapeCommandline ssh_config(5) option that
         controls whether the client-side ~C escape sequence that provides a
         command-line is available. Among other things, the ~C command-line
         could be used to add additional port-forwards at runtime.

         This option defaults to "no", disabling the ~C command-line that was
         previously enabled by default. Turning off the command-line allows
         platforms that support sandboxing of the ssh(1) client (currently only
         OpenBSD) to use a stricter default sandbox policy.

     -- Colin Watson <cjwatson@debian.org>  Wed, 08 Feb 2023 10:36:06 +0000

    Why???

    Setting up nginx (1.22.1-6) ...
    Upgrading binary: nginx failed!
    invoke-rc.d: initscript nginx, action "upgrade" failed.
    Job for nginx.service failed because the control process exited with error code.
    See "systemctl status nginx.service" and "journalctl -xeu nginx.service" for details.
    invoke-rc.d: initscript nginx, action "restart" failed.
    × nginx.service - A high performance web server and a reverse proxy server
	 Loaded: loaded (/lib/systemd/system/nginx.service; enabled; preset: enabled)
	 Active: failed (Result: exit-code) since Wed 2023-02-15 00:04:40 PST; 10ms ago
       Duration: 2w 6d 4h 50min 29.781s
	   Docs: man:nginx(8)
	Process: 1063623 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=1/FAILURE)
	    CPU: 27ms

    Feb 15 00:04:40 lenin systemd[1]: Starting nginx.service - A high performance web server and a reverse proxy server...
    Feb 15 00:04:40 lenin nginx[1063623]: 2023/02/15 00:04:40 [emerg] 1063623#1063623: a duplicate default server for 0.0.0.0:80 in /etc/nginx/sites-enabled/wileymud:127
    Feb 15 00:04:40 lenin nginx[1063623]: nginx: configuration file /etc/nginx/nginx.conf test failed
    Feb 15 00:04:40 lenin systemd[1]: nginx.service: Control process exited, code=exited, status=1/FAILURE
    Feb 15 00:04:40 lenin systemd[1]: nginx.service: Failed with result 'exit-code'.
    Feb 15 00:04:40 lenin systemd[1]: Failed to start nginx.service - A high performance web server and a reverse proxy server.
    dpkg: error processing package nginx (--configure):
     installed nginx package post-installation script subprocess returned error exit status 1

    dpkg: dependency problems prevent configuration of nginx-common:
     nginx-common depends on nginx (<< 1.22.1-6.1~); however:
      Package nginx is not configured yet.
     nginx-common depends on nginx (>= 1.22.1-6); however:
      Package nginx is not configured yet.

    dpkg: error processing package nginx-common (--configure):
     dependency problems - leaving unconfigured

    dpkg: dependency problems prevent configuration of libnginx-mod-stream-geoip:
     libnginx-mod-stream-geoip depends on nginx-common (= 1.22.1-6); however:
      Package nginx-common is not configured yet.

    dpkg: error processing package libnginx-mod-stream-geoip (--configure):
     dependency problems - leaving unconfigured

    dpkg: dependency problems prevent configuration of nginx-full:
     nginx-full depends on nginx (>= 1.22.1-6); however:
      Package nginx is not configured yet.
     nginx-full depends on nginx (<< 1.22.1-6.1~); however:
      Package nginx is not configured yet.

    dpkg: error processing package nginx-full (--configure):
     dependency problems - leaving unconfigured

    dpkg: dependency problems prevent configuration of libnginx-mod-http-xslt-filter:
     libnginx-mod-http-xslt-filter depends on nginx-common (= 1.22.1-6); however:
      Package nginx-common is not configured yet.

    dpkg: error processing package libnginx-mod-http-xslt-filter (--configure):
     dependency problems - leaving unconfigured

    dpkg: dependency problems prevent configuration of libnginx-mod-http-geoip:
     libnginx-mod-http-geoip depends on nginx-common (= 1.22.1-6); however:
      Package nginx-common is not configured yet.

    dpkg: error processing package libnginx-mod-http-geoip (--configure):
     dependency problems - leaving unconfigured

    dpkg: dependency problems prevent configuration of nginx-core:
     nginx-core depends on libnginx-mod-http-geoip (>= 1.22.1-6); however:
      Package libnginx-mod-http-geoip is not configured yet.
     nginx-core depends on libnginx-mod-http-geoip (<< 1.22.1-6.1~); however:
      Package libnginx-mod-http-geoip is not configured yet.
     nginx-core depends on libnginx-mod-http-xslt-filter (>= 1.22.1-6); however:
      Package libnginx-mod-http-xslt-filter is not configured yet.
     nginx-core depends on libnginx-mod-http-xslt-filter (<< 1.22.1-6.1~); however:
      Package libnginx-mod-http-xslt-filter is not configured yet.
     nginx-core depends on libnginx-mod-stream-geoip (>= 1.22.1-6); however:
      Package libnginx-mod-stream-geoip is not configured yet.
     nginx-core depends on libnginx-mod-stream-geoip (<< 1.22.1-6.1~); however:
      Package libnginx-mod-stream-geoip is not configured yet.
     nginx-core depends on nginx (>= 1.22.1-6); however:
      Package nginx is not configured yet.
     nginx-core depends on nginx (<< 1.22.1-6.1~); however:
      Package nginx is not configured yet.

    dpkg: error processing package nginx-core (--configure):
     dependency problems - leaving unconfigured
    dpkg: dependency problems prevent configuration of libnginx-mod-mail:
     libnginx-mod-mail depends on nginx-common (= 1.22.1-6); however:
      Package nginx-common is not configured yet.

    dpkg: error processing package libnginx-mod-mail (--configure):
     dependency problems - leaving unconfigured

    dpkg: dependency problems prevent configuration of libnginx-mod-http-image-filter:
     libnginx-mod-http-image-filter depends on nginx-common (= 1.22.1-6); however:
      Package nginx-common is not configured yet.

    dpkg: error processing package libnginx-mod-http-image-filter (--configure):
     dependency problems - leaving unconfigured
    dpkg: dependency problems prevent configuration of libnginx-mod-stream:
     libnginx-mod-stream depends on nginx-common (= 1.22.1-6); however:
      Package nginx-common is not configured yet.

    dpkg: error processing package libnginx-mod-stream (--configure):
     dependency problems - leaving unconfigured

    Errors were encountered while processing:
     nginx
     nginx-common
     libnginx-mod-stream-geoip
     nginx-full
     libnginx-mod-http-xslt-filter
     libnginx-mod-http-geoip
     nginx-core
     libnginx-mod-mail
     libnginx-mod-http-image-filter
     libnginx-mod-stream
    E: Sub-process /usr/bin/dpkg returned an error code (1)

    Because... the package replacement process ASSUMES you will always want
    /etc/nginx/sites-enabled/default to exist, and replaces it, even if you
    deleted it yourself... thus causing a duplicate to exist.

2023-02-22
    apt install libcurl4-openssl-dev

2023-03-04
    apt install libwebsockets-dev

2023-03-21
    N: Repository 'Debian bookworm' changed its 'non-free component' value
        from 'non-free' to 'non-free non-free-firmware'
    N: More information about this can be found online in the Release notes
        at: https://www.debian.org/releases/bookworm/amd64/release-notes/ch-information.html#non-free-split

    Added non-free-firmware to apt.sources

    Also worth noting:

    If you were pointed to this chapter by apt you can prevent it from
        continuously notifying you about this change by creating an apt.conf(5)
        file named /etc/apt/apt.conf.d/no-bookworm-firmware.conf with the
        following content:
            APT::Get::Update::SourceListWarnings::NonFreeFirmware "false";

2023-03-23
    /etc/default/grub
        GRUB_BACKGROUND="/boot/foxgirl.png"

    /etc/gdm3/greeter.dconf-defaults

        [org/gnome/desktop/background]
        picture-uri='file:///boot/catgirl.png'
        picture-options='zoom'
        # This seems to do nothing...

        [org/gnome/login-screen]
        logo='/usr/share/images/vendor-logos/logo-text-version-64.png'
        #logo='/boot/catgirl.png'
        # This puts the image in FRONT of the user list, unuseable...

        [org/gnome/settings-daemon/plugins/power]
        sleep-inactive-ac-timeout=600
        sleep-inactive-ac-type='blank'
        # This correctly puts the monitor to sleep after 10 minutes.

2023-03-24
    apt install libglib4.0-dev dconf-cli git
    git clone --depth=1 https://github.com/realmazharhussain/gdm-tools.git gdm-tools
    cd gdm-tools
    ./install.sh

    set-gdm-theme backup update
    set-gdm-theme list
    set-gdm-theme set -b /boot/catgirl.png

    and.... yet another bit of absurdity...

    It appears that while /etc/gdm3/greeter.dconf-defaults is used
    by systemctl restart gdm3 initially, once you do a reboot, that file
    is no longer used as there's ANOTHER copy in /usr/share/gdm/greeter.dconf-defaults
    and THAT gets compiled into a binary version called greeter-dconf-defaults.

    So, for your changes to stick, you have to edit both of them to make them in
    sync, and then dpkg-reconfigure gdm3

2023-04-09
    Added a redirect to nginx so I can use my hostname to get to my github easily.

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
            #    return 302 https://github.com/quixadhal/wileymud
            rewrite ^/git(hub)?(.*)$ https://github.com/quixadhal/wileymud$2 last;
        }

    I should probably put all these config files into github too, so they don't
    get lost.

2023-04-11
    Added a quick thing to clean up Easter for the web pages.  Since Easter
    roams around the calendar between mid-March and late-April, but I really only
    want to see Easter images for a week.... I wrote a script to run every March 1st
    which removes all the old links for last year and builds new ones for this
    year.

2023-04-18
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    Suggested packages:
        aufs-tools cgroupfs-mount | cgroup-lite

    So... after following the directions on docker's site, you will find that
    the service fails to start.... it does not mention that you apparently need
    to reboot because of changes to iptables and/or the kernel...

2023-04-28
    I thought I already did this, but grub reminded me that

        # This allows grub to generate entries for non-linux boot loaders
        GRUB_DISABLE_OS_PROBER=false

    I don't have any other OS's on this machine, but I see no valid reason
    NOT to check for them, in case I add something in the future.  I can't
    see why anyone would complain about an extra 0.5 seconds at boot time.

2023-05-27
    apt install uuid uuid-dev

2023-05-29
    cpan
        install IO::Socket::Telnet

2023-06-06
    Have to rebuild X11 nonsense again....

2023-06-21
    apt install sc

2023-06-22
    Debian has switched from bookworm to trixie:

        apt-listchanges: News
        ---------------------

        llvm-toolchain-15 (1:15.0.6-5) unstable; urgency=medium

          * libclang-common-X.Y-dev has been split into libclang-rt-X.Y-dev,
            libpolly-X.Y-dev, libclang-rt-14-dev-wasm32 and libclang-rt-14-dev-wasm64
            compiler-rt and polly moved to libclang-rt-X.Y-dev
            libclang-common-X.Y-dev is now arch:any and contains headers
            libclang-common-X.Y-dev recommends libclang-rt-X.Y-dev
          * As a ride along, flang is packaged as part of the llvm-toolchain
            packages.

         -- Sylvestre Ledru <sylvestre@debian.org>  Sun, 08 Jan 2023 12:32:33 +0100

    Also, for future reference, every time anything related to gnome gets updated
    it removes our custom login screen... so

    set-gdm-theme set -b /boot/catgirl.png

2023-06-23
    apt install python3.12-full python3.12-dev python3-gdbm-dbg
    apt install python3-sqlalchemy python-sqlalchemy-doc python3-sqlalchemy-ext 
        python-greenlet-dev python-greenlet-doc python3-asyncpg
        python3-psycopg2 python-psycopg2-doc python3-greenlet
    apt install python3-alembic alembic
    apt install sqlacodegen
    apt install python3-sqlalchemy-utc

    Maybe consider these for later...
        python3-sqlalchemy-i18n
        python3-sqlalchemy-utils python-sqlalchemy-utils-doc
        python3-celery python-celery-doc celery

2023-07-14
    apt install python3-dotenv
    apt install python3-discord python-discord-doc python3-nacl python-nacl-doc

2023-08-04
    openssh (1:9.3p2-1) unstable; urgency=high

      OpenSSH 9.3p2 includes a number of changes that may affect existing
      configurations:

       * ssh-agent(8): the agent will now refuse requests to load PKCS#11
         modules issued by remote clients by default. A flag has been added to
         restore the previous behaviour "-Oallow-remote-pkcs11".

         Note that ssh-agent(8) depends on the SSH client to identify requests
         that are remote. The OpenSSH >=8.9 ssh(1) client does this, but
         forwarding access to an agent socket using other tools may circumvent
         this restriction.

     -- Colin Watson <cjwatson@debian.org>  Wed, 19 Jul 2023 21:57:53 +0100

    apt remove coinor-libcbc3 coinor-libcoinmp1v5 libreoffice-calc
    apt install coinor-libcbc3.1

    Broken dependencies here... probably a transitional thing, it's pretty
    rare of Debian to let stuff out the door with conflicts.  I hate libreoffice
    anyways, so byebye. :)

2023-08-29
    Setting up linux-headers-6.4.0-3-amd64 (6.4.11-1) ...
    /etc/kernel/header_postinst.d/dkms:
    dkms: running auto installation service for kernel 6.4.0-3-amd64.
    Sign command: /lib/modules/6.4.0-3-amd64/build/scripts/sign-file
    Signing key: /var/lib/dkms/mok.key
    Public certificate (MOK): /var/lib/dkms/mok.pub

    Building module:
    Cleaning build area...
    make -j2 KERNELRELEASE=6.4.0-3-amd64 -C /lib/modules/6.4.0-3-amd64/build M=/var/lib/dk
    ms/r8168/8.051.02/build..........(bad exit status: 2)
    Error! Bad return status for module build on kernel: 6.4.0-3-amd64 (x86_64)
    Consult /var/lib/dkms/r8168/8.051.02/build/make.log for more information.
    dkms autoinstall on 6.4.0-3-amd64/x86_64 succeeded for broadcom-sta
    dkms autoinstall on 6.4.0-3-amd64/x86_64 failed for r8168(10)
    Error! One or more modules failed to install during autoinstall.
    Refer to previous errors for more information.
    dkms: autoinstall for kernel: 6.4.0-3-amd64 failed!
    run-parts: /etc/kernel/header_postinst.d/dkms exited with return code 11
    Failed to process /etc/kernel/header_postinst.d at /var/lib/dpkg/info/linux-headers-6.
    4.0-3-amd64.postinst line 11.
    dpkg: error processing package linux-headers-6.4.0-3-amd64 (--configure):
     installed linux-headers-6.4.0-3-amd64 package post-installation script subprocess ret
    urned error exit status 1
    Setting up python3.11-dev (3.11.5-2) ...
    dpkg: dependency problems prevent configuration of linux-headers-amd64:
     linux-headers-amd64 depends on linux-headers-6.4.0-3-amd64 (= 6.4.11-1); however:
      Package linux-headers-6.4.0-3-amd64 is not configured yet.

    dpkg: error processing package linux-headers-amd64 (--configure):
     dependency problems - leaving unconfigured
    Setting up libcloudproviders-dev:amd64 (0.3.2-1) ...

    Errors were encountered while processing:
     linux-image-6.4.0-3-amd64
     linux-image-amd64
     linux-headers-6.4.0-3-amd64
     linux-headers-amd64
    E: Sub-process /usr/bin/dpkg returned an error code (1)

    ---- FIXED by editing the module source directly....

    Package: r8168-dkms
    Version: 8.051.02-3
    Severity: important

    Dear Maintainer,

    I confirm that the bug is present.
    "PascalHambourg" on our forum found a workaround by directly editing the 
    file /usr/src/r8168-8.051.02/r8168_n.c

    Replace
    #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,5,0)

    By
    #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,4,10)

    And the compilation of the module happens without error.

    Best regards,
    Lol.

2023-09-18
    exim4 (4.97~RC0-2) unstable; urgency=low

      Changed format of the internal ID used for message identification.
      - Upgrading should work seamlessly.
      - Downgrading to 4.96 requires stopping the daemon and running
        exim_id_update -d
        before running the older daemon.

     -- Andreas Metzler <ametzler@debian.org>  Sun, 10 Sep 2023 14:04:49 +0200

    exim4 (4.96-20) experimental; urgency=low

      Drop support for configuring daemon startup by setting QUEUERUNNER in
      /etc/default/exim4.
      Also replace QFLAGS, QUEUEINTERVAL, COMMONOPTIONS, QUEUERUNNEROPTIONS and
      SMTPLISTENEROPTIONS settings for init script/service file in
      etc/default/exim4 with a combined EXIMSERVICE (for systemd) or
      EXIMDAEMONOPTS (init script) directive.

      Most of the previous functionality is available by different
      means:
      + Disable running an exim daemon this way ('nodaemon'):
        -> Use the native functionality of the init system you are using, e.g.
        for systemd mask the service.
      + Start two separate daemon processes, one for listening on port 25 and
        another for queue running ('separate')
        -> Not supported anymore.
      + Run a daemon that both listens on port 25 and runs the queue.
        -> default behavior ('-bdf -q30m' / '-bd -q30m')
      + Run a daemon that either listens on port 25 and runs the queue.
        -> set to -bdf/-bd without -q30m or vice versa.
      + Only run queue when a ppp connection is made ('ppp'):
        -> Disable queuerunner like noted above and remove the 'exit 0' from
        the start of /etc/ppp/ip-up.d/exim4

     -- Andreas Metzler <ametzler@debian.org>  Wed, 16 Aug 2023 17:44:59 +0200

2023-09-24
    PostgreSQL upgrade time...

        systemctl stop wileymud

        sudo apt install postgresql-plperl-15
        sudo su postgres
        for i in ack forum i3log logfile pi3 ping py3 rule speedtest test \
            wileymud wileyp postgres template1; do \
            echo alter database $i refresh collation version | \
            psql $i; done
        pg_dumpall --cluster 16/main >new_16.sql
        pg_dumpall --cluster 15/main >backup_15.sql

        pg_dropcluster --stop 16 main
        systemctl daemon-reload
        pg_upgradecluster 15 main
        systemctl daemon-reload

        systemctl start wileymud
        xz -9v backup_15.sql

----- This is where we start migrating to a new VM -----

2023-10-18
    OK, had to install Debian 12.2 STABLE to get vbox addons to work,
    as Debian still hasn't fixed DKMS, whcih the tools require to build
    the kernal modules.

    bridged adapter, MAC 080027C16FD8
    root: FuckYouHax0rZ9001 <-- obviously for install purposes, don't get excited.

    /sbin/usermod -a -G sudo wiley
    /sbin/usermod -a -G vboxsf wiley
    -- reboot to ensure GDM and friends all get updated info

    dpkg-reconfigure tzdata
    -- Americas/Los Angelos
    -- Otherwise, it will somehow forget what you said and fall back to UTC

    apt install build-essential module-assistant
    m-a prepare
    mount /media/cdrom
    bash VBoxLinuxAdditions.run

    -- reboot again, and at least mouse cut/paste works with Gnome.

    Setup .ssh stuff and we're ready to begin

    Let's repeat history and follow my old HACKLOG for the physical machine
    going back in time to 2019-01-07

    apt install sudo
    apt install dkms build-essential linux-headers-amd64
    apt install git git-doc
    apt install vim-nox vim-doc
    apt install clang

    Copied .inputrc, .vimrc, .vim/ from my home directory to both wiley and root
    Without doing this, cut/paste behavior via Putty was weird.

    apt install libssl-dev libssl-doc
    apt install libpcre3-dev libpcre3-dbg sqlite3-pcre

    Chagned /etc/ssh/sshd_config to allow logins without an X11 login already established.
        # Yes this is old and evil, but putty needs it.
        HostkeyAlgorithms +ssh-rsa
        PubkeyAcceptedAlgorithms +ssh-rsa

        PubkeyAuthentication yes
        PasswordAuthentication yes
        PermitEmptyPasswords yes
        KbdInteractiveAuthentication yes
        ChallengeResponseAuthentication yes
        UsePAM yes
        AllowTcpForwarding yes
        X11Forwarding yes
        PermitTTY yes
        PrintMotd no
        TCPKeepAlive no

    Added the old fix for ssh hanging, which may not apply to a VM but can't hurt.
    /etc/default/grub
        GRUB_CMDLINE_LINUX_DEFAULT="quiet random.trust_cpu=on"
        GRUB_CMDLINE_LINUX="random.trust_cpu=on"

    /etc/default/grub
        GRUB_BACKGROUND="/boot/foxgirl.png"

    apt install git

    NOW, at this point, we're ready to mass re-install the packages we had
    before, so i pawed through my old HACKLOG and found all the apt install
    lines, did some sorting/uniqing, replaced a few packages that got
    renamed or reversioned, and have a shell script to run

        . ./install_stuff.sh

    If all goes well, this will install a LOT of packages at once, the
    simulated version worked OK, so I guess we'll give it a shot while I
    make dinner.

    It appers to have worked, but for some reason it installed apache...
        apt purge apache2 apache2-utils libapache2-mod-php8.2
                  libapache2-mod-dnssd apache2-data
    We can't remove apache2-bin, because GNOME relies on it???


    /etc/gdm3/greeter.dconf-defaults
        [org/gnome/settings-daemon/plugins/power]
        sleep-inactive-ac-timeout=600
        sleep-inactive-ac-type='blank'
        # This correctly puts the monitor to sleep after 10 minutes.

    git clone --depth=1 https://github.com/realmazharhussain/gdm-tools.git gdm-tools
    cd gdm-tools
    ./install.sh

    set-gdm-theme backup update
    set-gdm-theme list
    set-gdm-theme set -b /boot/catgirl.png

    It appears that while /etc/gdm3/greeter.dconf-defaults is used
    by systemctl restart gdm3 initially, once you do a reboot, that file
    is no longer used as there's ANOTHER copy in /usr/share/gdm/greeter.dconf-defaults
    and THAT gets compiled into a binary version called greeter-dconf-defaults.

    So, for your changes to stick, you have to edit both of them to make them in
    sync, and then dpkg-reconfigure gdm3

2023-10-19
    cpan
        install File::SAUCE
        install File::Spec
        install utf8::all
        install YAML
        install Time::HiRes
        install Digest::MD5
        install Bundle::CPAN
        install CPAN::DistnameInfo
        install CPAN::DistnameInfo
        install HTML::FromANSI
        install Archive::Extract File::HomeDir File::ShareDir File::ShareDir::Install
        install GooCanvas2 JSON Net::OpenSSH Path::Tiny Regexp::IPv6 X11::WMCtrl
        install Time::HiRes
        install Log::Log4perl
        install Image::Size
        install Image::MetaData::JPEG
        install Sort::Naturally::ICU
        install Try::Tiny::SmartCatch
        install Proc::ProcessTable
        install forks
        install Config::Tiny
        install Imager::QRCode
        install pQuery
        install File::Random
        install Chart::Pie
        install POE::Component::Log4perl
        install Config::Tiny
        install Config::Tiny::Ordered
        install Module::Build
        install XSLoader
        install AnyEvent
        install AnyEvent::Gearman::Client
        install Class::XSAccessor
        install Compress::Raw::Zlib
        install Cache::Memcached::Fast
        install Log::Log4perl
        install Devel::Size
        install Test::Differences
        install Devel::NYTProf
        install Text::CSV_XS
        install Time::Out
        install Log::Dispatch::FileRotate
        install Sort::Key::Natural
        install IO::Socket::Telnet
    cpan install Devel::Modlist
    cpan install Module::ExtractUse

        install HTML::FormatText::Lynx HTML::FormatText::Html2text
        o conf lynx /usr/bin/lynx
        o conf commit


    Now that the pre-reqs are done, we can hand-install Image::ANSI, since
    the author removed it from CPAN to push his newer version, which simply doesn't
    work the same way.

    apt-file update
    . /etc/cron.daily/locate

    copied wileymud nginx site files into place at /etc/nginx/sites-available
    and also copied it over default, to avoid future issues.

    Restored pg_dumpall from version 15, a few months ago.  If this becomes
    the main system again, we will have to upgrade postgres to version 16, or
    figure out how to back it up for restore to version 15 from the live system.

    Adjusted /etc/postgresql/11/main/pg_hba.conf
        local   all             wiley                                   md5

    Copies over a bunch of apt keyrings and whatnot to avoid having to jump
    through all the hoops again for docker/vscode/speetest/etc.

        The file apt_stuff.tar.xz should be unpacked as root in /etc/apt/

    apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin
        docker-compose-plugin
    apt install code
    apt install dotnet-sdk-6.0 dotnet-sdk-5.0 dotnet-sdk-3.1

2023-10-26

    Added i3logbackup to git

    cd /home/www/log/data
    chgrp www-data .
    chmod g+w .
    chgrp www-data autoplaylist* video_list.tar.xz
    chmod g+w autoplaylist* video_list.tar.xz

    Not a big deal, but allows the web server video page to update stuff
    directly, if anyone happens to use it.

2023-10-27
    Installed local /etc/hosts aliai

        # Local shortcuts
        45.64.56.66     kelly-old.themud.org        kelly-old
        112.213.38.109  kelly.themud.org            kelly
        97.107.133.86   dalet.themud.org            dalet
        #192.168.0.12    wileymud3.awasteoftime.net  wileymud3
        192.168.0.16    lenin.awasteoftime.net      lenin

    Screwed around with ssh keys and recompiling tinyfugue.

