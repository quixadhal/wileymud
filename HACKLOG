2019-01-07

Installed Debian buster with Gnome desktop
added contrib and non-free to apt sources.list

apt install sudo
apt install dkms build-essential linux-headers-amd64
apt install git git-doc
apt install vim-nox vim-doc

Ugh... stupid nanny state politics...
	To enable root logins from the X11 display manager (gdm)
	edit /etc/gdm3/daemon.conf
	add AllowRoot = true to the [Security] section
	edit /etc/pam.d/gdm-password
	comment out auth required pam_succeed_if.so user != root quiet_success

apt install clang
apt install manpages-posix

Copied .inputrc, .vimrc, .vim/ from my home directory to both wiley and root
Without doing this, cut/paste behavior via Putty was weird.

apt install sqlite3 libsqlite3-dev libdbd-sqlite3-perl sqlite3-doc
apt install libssl-dev libssl-doc
apt install libpcre3-dev libpcre3-dbg sqlite3-pcre

Chagned /etc/ssh/sshd_config to allow logins without an X11 login already established.
    PubkeyAuthentication yes
    PasswordAuthentication yes
    PermitEmptyPasswords yes
    ChallengeResponseAuthentication yes
    UsePAM yes
    AllowTcpForwarding yes
    X11Forwarding yes
    PermitTTY yes
    PrintMotd no
    TCPKeepAlive yes

OK, this is weird... sshd refused connections for FOUR MINUTES after a reboot?  WTF???
Why would it not start immediately, even before X11 was finished setting itself up?

https://daniel-lange.com/archives/152-Openssh-taking-minutes-to-become-available,-booting-takes-half-an-hour-...-because-your-server-waits-for-a-few-bytes-of-randomness.html

That's why.  Fucking hell.

Well, the "fix" for this is to edit /etc/default/grub

    GRUB_CMDLINE_LINUX_DEFAULT="quiet random.trust_cpu=on"
    GRUB_CMDLINE_LINUX="random.trust_cpu=on"

apt install flex bison autoconf automake libtool binutils
apt install gnu-standards autoconf-doc gettext bison-doc flex-doc libtool-doc
apt install m4-doc autoconf-archive doc-base gettext-doc
apt install zlib1g-dev
apt install libwww-shorten-perl
apt install liblog-log4perl-perl
apt install readline-doc libterm-readline-gnu-perl
apt install libjson-perl

More weirdness with sshd...
    Had to disable keepalive, as it prevented more than a single SSH session from working.

apt install php php-pear
apt install php-mbstring
apt install libdate-manip-perl
apt install libnet-telnet-perl
apt install libcgi-pm-perl
cpan
    install HTML::FromANSI
apt install libhtml-tableextract-perl
apt install libgd-perl libgd-dev
apt install libclass-accessor-perl
cpan
    install File::SAUCE

Now that the pre-reqs are done, we can hand-install Image::ANSI, since
the author removed it from CPAN to push his newer version, which simply doesn't
work the same way.

Should we ever lose the tarball of this module, we'll have to rewrite our perl
code, which will be a PITA.

apt install libparallel-forkmanager-perl
apt install subversion cvs

apt install mtr

apt install ipset

iptables-persistent apparently does NOTHING, or at least does it wrong...
apt remove iptables-persistent

    *sigh*
    Fine.  To configure ipset, creat a blacklist table and then add all the entries to it.
        create blacklist hash:ip family inet hashsize 4096 maxelem 65536
        add blacklist 211.159.155.202
        add blacklist 150.109.73.131
        add blacklist 118.25.236.78
        add blacklist 118.89.161.221
        add blacklist 103.60.222.49
        add blacklist 132.232.142.195
        add blacklist 190.85.81.27
    Then, do ipset save blacklist >/etc/iptables/ipset.blacklist

    Once the blacklist exists, do this:

        iptables -I INPUT -m set --match-set blacklist src -j DROP
        iptables -I FORWARD -m set --match-set blacklist src -j DROP

    and then iptables-save > /etc/iptables/rules.v4

    NOW, to restore the rules at boot time (more-or-less), we hack 
        /etc/network/if-up.d/ and make a new script called ipset-restore

        #!/bin/sh

        # This is a kludge to make ipset and iptables restore their rulesets
        # at boot time.

        # We pin this to loopback, as normally that interface should always
        # come up AND isn't likely to go down, thus it should only happen once
        # per boot cycle.

        if [ "$IFACE" == "lo" ]; then
            if [ "$ADDRFAM" == "inet" ]; then
                ipset restore < /etc/iptables/ipset.blacklist
                iptables-restore < /etc/iptables/rules.v4
            fi
        fi

    and hopefully, this gets run after loopback comes up.  It would be ideal to have it
    only run after ALL network interfaces are up, but systemd makes this extremely hard
    to do.

Fucking hippy linux freaks.... a VM has no need to "suspend" or "hibernate"...
    systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target

Restore crontab for mudlist generation:
    0 3,11,19 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &

apt install rsync

Damnit, stop re-enablng ipv6 when it's not going to work anyways...

/etc/sysctl.conf:
    net.ipv6.conf.all.disable_ipv6 = 1
    net.ipv6.conf.default.disable_ipv6 = 1
    net.ipv6.conf.lo.disable_ipv6 = 1

/etc/ssh/sshd_conf:
    AddressFamily inet

/etc/postfix/main.cf:
    inet_interfaces = 127.0.0.1

apt install samba
smbpasswd -a wiley

Made some changes to /etc/samba/smb.conf
    # Samba versions
    # NT1 -- old CIFS version
    # SMB2 -- updated for vista and windows 7
    # SMB3 -- updated for windows 8

    client min protocol = SMB3
    client max protocol = SMB3
    server min protocol = SMB3
    server max protocol = SMB3
    socket options = TCP_NODELAY
    #security = user
    server signing = auto
    client signing = auto
    local master = no
    domain master = no
    preferred master = no
    os level = 10

    [homes]
       comment = Home Directories
       browseable = no
       read only = no
       create mask = 0755
       directory mask = 0755

    [tmp]
        comment = Temporary Stuff
        read only = no
        locking = no
        path = /tmp
        guest ok = yes

And even MORE hippy shit....
    root@wileymud3:/home/wiley# su - Debian-gdm -s /bin/bash
    Debian-gdm@wileymud3:~$ dbus-launch gsettings range org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type
    enum
    'blank'
    'suspend'
    'shutdown'
    'hibernate'
    'interactive'
    'nothing'
    'logout'
    Debian-gdm@wileymud3:~$ dbus-launch gsettings get org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type
    'suspend'
    Debian-gdm@wileymud3:~$ dbus-launch gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing'
    Debian-gdm@wileymud3:~$ logout

No, seriously.. it's a virtual machine.
There will be NO hugging of trees by making it "suspend".

crontab now:
    # m h  dom mon dow   command
    0 3,11,19 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
    25 2 * * * /home/wiley/bin/cleanlogs >/dev/null 2>&1 &
    30 2 * * * /home/wiley/bin/remote-backup >/dev/null 2>&1 &

apt install perl-doc
apt install python3-pip python3-twisted python-attr-doc python-crypto-doc python-openssl-doc
    python-secretstorage-doc python-setuptools-doc python3-examples fonts-roboto
    python-openssl python3-pampy python-cryptography-doc python-enum34-doc

apt install default-jre default-jdk
    ant jython antlr javacc ant-doc libregexp-java liblog4j2-java libjsch-java
    javacc-doc junit-doc jython-doc libpostgresql-jdbc-java libcommons-logging-java-doc
    openjdk-11-source libcompress-lzf-java liblog4j2-java-doc
    libcommons-net-java libcommons-net-java-doc liboro-java

apt install libdata-serializer-perl
apt install libdate-calc-perl

apt install php-sqlite3

updated crontab:
    # m h  dom mon dow   command
    1 3,6,9,12,15,18,21 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
    25 2 * * * /home/wiley/bin/cleanlogs >/dev/null 2>&1 &
    30 2 * * * /home/wiley/bin/remote-backup >/dev/null 2>&1 &
    5 1,7,13,19 * * * /home/wiley/bin/mklogpages.pl --overwrite --debug --start -3 --live --no-pause >/dev/null 2>&1 &

OK, undid all my anti-IPv6 changes (see above), since at Adam's prodding, I got my network
working with IPv6, as my ISP does support it.

For posterity, the main change in the router (beyond re-enabling it) was to tell it to
get an IPv6 address via SLAAC... it defaulted to DHCPv6, which does NOT work.  Once that was
done, I tweaked Windows 10 to "Prefer IPv6 over IPv4", rebooted everything, and it appears
to be functional.

It does seem slightly snappier, although it's hard to say if that's just from the fresh reboot
or because we're no longer using some transparent proxy 6to4 tunnel for everything.  Time
will tell, I guess.

I must say though,  172.92.143.166 is MUCH easier to remember than
2604:4080:1311:b8e1:c5e4:30cb:4f15:fdcc.  Whomever dreamed up that numbering system
needs to be forced to type it as a data entry clerk in hell for all eternity, with
lashings every time they make a typo.

apt install postgresql postgresql-doc libpostgresql-jdbc-java libpostgresql-jdbc-java-doc
    libdbd-pg-perl postgresql-plperl postgresql-plpython3 php-pgsql

apt install apt-file
    apt-file update

apt install whois

Adjusted /etc/postgresql/11/main/pg_hba.conf
    local   all             wiley                                   md5

apt install libpq-dev libpqtypes-dev libpqxx-dev libpq5 libpqxx-doc

updated crontab:
    # m h  dom mon dow   command
    1 0,3,6,9,12,15,18,21 * * * /home/wiley/bin/mkmudlist.pl >/dev/null 2>&1 &
    25 2 * * * /home/wiley/bin/cleanlogs >/dev/null 2>&1 &
    30 2 * * * /home/wiley/bin/remote-backup >/dev/null 2>&1 &
    5 1,4,7,10,13,16,19,22 * * * /home/wiley/bin/mklogpages.pl --overwrite --debug --start -3 --live --json --no-pause >/dev/null 2>&1 &
    #0,15,30,45 * * * * /home/wiley/bin/mklogpages.pl --no-pages --no-speakers --no-update --debug --live --no-json --no-pause >/dev/null 2>&1 &
    20 2 * * * (cd /home/wiley/public_html && /usr/bin/tar -cf logdata.tar logdata) >/dev/null 2>&1 &
    10 2 * * * (cd /home/wiley/public_html && PGPASSWORD=tardis69 /usr/bin/pg_dump --clean --if-exists --no-owner i3log | /usr/bin/xz -9ceq -T0 >i3log.sql.xz) >/dev/null 2>&1 &
    5 2 * * * /home/wiley/bin/untiny sql --mark >/dev/null 2>&1 &

