#!/bin/bash

HOME_DIR="/home/wiley"
LENIN_DIR="/share/leninbackup"

BIN_DIR="${HOME_DIR}/bin"
BACKUP_DIR="${HOME_DIR}/backups"
WEB_DIR="${HOME_DIR}/public_html"
CRON_TAB="${HOME_DIR}/etc/cron.tab"

NOW=`date "+%Y%m%d"`
YESTERDAY=`date "+%Y%m%d" --date="yesterday"`
YESTERDAY_DAY=`date "+%d" --date="yesterday"`
OLD_MONTH=`date "+%Y%m" --date="2 months ago"`

# Keep one backup a week for the current and previous months
KEEP_1="04"
KEEP_2="11"
KEEP_3="18"
KEEP_4="25"

# Trash ones from OLD_MONTH if they're in the first 3 KEEP weeks
TOSS_1="${OLD_MONTH}${KEEP_1}"
TOSS_2="${OLD_MONTH}${KEEP_2}"
TOSS_3="${OLD_MONTH}${KEEP_3}"

NOW_DIR="${BACKUP_DIR}/${NOW}"

ALIVE="${LENIN_DIR}/.alive"
I3LOG_DB="${NOW_DIR}/i3log.sql.xz"
WILEYMUD_DB="${NOW_DIR}/wileymud.sql.xz"
LOGFILE_DB="${NOW_DIR}/logfile.sql.xz"
WILEYMUD_FILES="${NOW_DIR}/wileymud_files.tar.xz"
DISKWORLD_FILES="${NOW_DIR}/diskworld_files.tar.xz"
LOGDATA_FILES="${NOW_DIR}/logdata.tar.xz"
LOGPAGE_FILES="${NOW_DIR}/logpages.tar.xz"

if [ -d "${NOW_DIR}" ]; then
    echo "Today's backup has already been done."
    exit 1
fi

mkdir -p "${NOW_DIR}"

echo -en "Updating mudlist info..."
${BIN_DIR}/mkmudlist.pl >/dev/null 2>&1
echo -en "logpages..."
${BIN_DIR}/mklogpages.pl --overwrite --start -3 --json --censor --no-pause >/dev/null 2>&1
echo -en "urls..."
${BIN_DIR}/untiny sql --mark >/dev/null 2>&1
echo -en "done.\n"

echo -en "Starting i3log database backup..."
PGPASSWORD=tardis69 pg_dump --clean --if-exists --no-owner i3log | xz -9ceq -T0 >"${I3LOG_DB}"
echo -en "wileymud..."
PGPASSWORD=tardis69 pg_dump --clean --if-exists --no-owner wileymud | xz -9ceq -T0 >"${WILEYMUD_DB}"
echo -en "logfile..."
PGPASSWORD=tardis69 pg_dump --clean --if-exists --no-owner logfile | xz -9ceq -T0 >"${LOGFILE_DB}"
echo -en "done.\n"

echo -en "Starting backup of WileyMUD files..."
crontab -l >"${CRON_TAB}" 2>/dev/null
(cd "${HOME_DIR}" && tar -Jcf ${WILEYMUD_FILES} bin src lib etc) >/dev/null 2>&1
echo -en "Disk World..."
(cd "${HOME_DIR}" && tar -Jcf ${DISKWORLD_FILES} dw) >/dev/null 2>&1
echo -en "done.\n"

echo -en "Starting backup of I3 log data..."
(cd "${WEB_DIR}" && tar -Jcf ${LOGDATA_FILES} logdata) >/dev/null 2>&1
echo -en "cleanup..."
${BIN_DIR}/cleanlogs.pl >/dev/null 2>&1
echo -en "pages..."
(cd "${WEB_DIR}" && tar -Jcf ${LOGPAGE_FILES} logpages) >/dev/null 2>&1
echo -en "done.\n"

echo -en "Updating web symlinks..."
ln -sf "${I3LOG_DB}" "${WEB_DIR}/"
ln -sf "${LOGDATA_FILES}" "${WEB_DIR}/"
ln -sf "${LOGPAGE_FILES}" "${WEB_DIR}/"
echo -en "done.\n"

echo -en "Managing old backups..."
if [ -f "${ALIVE}" ]; then
    echo -en "copying..."
    cp -rp "${NOW_DIR}" "${LENIN_DIR}/"
    echo -en "done.\n"
fi
if [ -d "${BACKUP_DIR}/${YESTERDAY}" ]; then
    if [ "${YESTERDAY_DAY}" = "${KEEP_1}" ]; then
        echo -en "skipping..."
    elif [ "${YESTERDAY_DAY}" = "${KEEP_2}" ]; then
        echo -en "skipping..."
    elif [ "${YESTERDAY_DAY}" = "${KEEP_3}" ]; then
        echo -en "skipping..."
    elif [ "${YESTERDAY_DAY}" = "${KEEP_4}" ]; then
        echo -en "skipping..."
    else
        echo -en "removing ${YESTERDAY}..."
        rm -rf "${BACKUP_DIR}/${YESTERDAY}"
        if [ -f "${ALIVE}" ]; then
            if [ -d "${LENIN_DIR}/${YESTERDAY}" ]; then
                echo -en "and remote..."
                rm -rf "${LENIN_DIR}/${YESTERDAY}"
            fi
        fi
        echo -en "\n"
    fi
fi
if [ -d "${BACKUP_DIR}/${TOSS_1}" ]; then
    echo -en "removing ${TOSS_1}..."
    rm -rf "${BACKUP_DIR}/${TOSS_1}"
    if [ -f "${ALIVE}" ]; then
        if [ -d "${LENIN_DIR}/${TOSS_1}" ]; then
            echo -en "and remote..."
            rm -rf "${LENIN_DIR}/${TOSS_1}"
        fi
    fi
    echo -en "\n"
fi
if [ -d "${BACKUP_DIR}/${TOSS_2}" ]; then
    echo -en "removing ${TOSS_2}..."
    rm -rf "${BACKUP_DIR}/${TOSS_2}"
    if [ -f "${ALIVE}" ]; then
        if [ -d "${LENIN_DIR}/${TOSS_2}" ]; then
            echo -en "and remote..."
            rm -rf "${LENIN_DIR}/${TOSS_2}"
        fi
    fi
    echo -en "\n"
fi
if [ -d "${BACKUP_DIR}/${TOSS_3}" ]; then
    echo -en "removing ${TOSS_3}..."
    rm -rf "${BACKUP_DIR}/${TOSS_3}"
    if [ -f "${ALIVE}" ]; then
        if [ -d "${LENIN_DIR}/${TOSS_3}" ]; then
            echo -en "and remote..."
            rm -rf "${LENIN_DIR}/${TOSS_3}"
        fi
    fi
    echo -en "\n"
fi
echo -en "done.\n"

(cd "${BACKUP_DIR}/${NOW}" && ls --color --group-directories-first --human-readable -l)

